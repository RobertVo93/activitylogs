{"version":3,"sources":["share-components/DynamicForm/DynamicFormPropState.ts","share-components/Variables/ReferenceList/ReferencePropsStates.ts","share-components/Variables/ReferenceList/Reference.service.ts","share-components/Variables/ReferenceList/ReferenceList.tsx","share-components/Variables/DropdownList/DropDownPropsStates.ts","share-components/Variables/DropdownList/DropdownList.tsx","share-components/Variables/DateRange/DateRangePropsStates.ts","share-components/Variables/DateRange/DateRange.tsx","share-components/DynamicForm/DynamicForm.tsx","share-components/DynamicForm/questions/question-dropdown.ts","share-components/DynamicForm/questions/question-textarea.ts","share-components/DynamicForm/questions/question-textbox.ts","share-components/DynamicForm/questions/question-daterange.ts","share-components/DynamicForm/questions/question-reference.ts","service/common-api.service.ts","share-components/DynamicForm/index.ts","serviceWorker.ts","components/About/About.tsx","components/Home/Home.tsx","components/UI/Toolbar/Toolbar.tsx","redux/store/user/actions.ts","redux/store/user/types.ts","components/Contact/Contact.tsx","components/Auth/SignUp/SignUpPropsStates.ts","components/Auth/SignUp/SignUp.tsx","configuration/config.ts","components/Management/Users/User.service.ts","class/user.ts","share-components/Alert/AlertComponent.tsx","components/Management/Users/UserPropsStates.ts","components/Management/Users/User.tsx","share-components/Table/Filter/Filter.jsx","share-components/Table/Selection/RowSelection.jsx","share-components/Table/Pagination/TablePaginationActions.jsx","share-components/Table/Filter/GlobalFilter.jsx","share-components/Table/Toolbar/TableToolbar.jsx","share-components/Table/Table.jsx","redux/containers/Users/UserContainer.tsx","components/Management/Activities/Activity.service.ts","class/activity.ts","components/Management/Activities/ActivityPropsState.ts","share-components/Variables/BreakLine/BreakLine.tsx","share-components/CommentLog/CommentLogPropsStates.ts","class/common/comment.ts","share-components/CommentLog/CommentLog.tsx","service/common.service.ts","components/Management/Activities/Activity.tsx","redux/containers/Activities/ActivityContainer.tsx","redux/store/activity/actions.ts","redux/store/activity/types.ts","components/Auth/Login/LoginPropsStates.ts","components/Auth/Login/Login.tsx","App.tsx","components/Footer/Footer.tsx","redux/store/user/reducers.ts","redux/store/activity/reducers.ts","redux/store/request/types.ts","redux/store/request/reducers.ts","redux/store/request/actions.ts","redux/store/index.ts","share-components/Spinner/LoadingSpinner.tsx","index.tsx","share-components/DynamicForm/form.config.ts","class/common/keyValue.ts","share-components/DynamicForm/questions/question-base.ts","configuration/api.config.ts","class/common/date-range.ts"],"names":["initialDynamicFormStates","originalListFields","listFields","errors","disableSubmitButton","initialReferenceStates","referenceKey","originalSelected","selected","selectedValue","searchKey","data","originalData","ReferenceService","config","this","getByUrl","bind","url","commonAPI","get","res","success","SearchInput","styled","input","ReferenceList","props","referenceService","state","apiConfig","onSelectionChangeHandler","renderSearchBar","onSearchInputChangeHandler","default","serverUrl","allReference","displayedData","forEach","element","newObj","JSON","parse","stringify","p","indexOf","displayField","push","setState","result","searchBar","className","onChange","placeholder","Dropdown","Divider","event","preventDefault","target","value","eventKey","preSelected","i","length","_id","toString","onSelectionChange","DropdownButton","id","title","onSelect","filter","val","map","option","index","Item","key","Object","keys","opt","ind","React","Component","initialDropDownStates","dropdownKey","KeyValue","CustomDropDown","options","initialDateRangeStates","originalDateRange","ODateRange","dateRange","startDate","endDate","ContainerDiv","div","StartDateDiv","EndDateDiv","DateRange","handleChangeStartDate","handleChangeEndDate","undefined","date","console","log","dateFormat","maxDate","minDate","DangerText","color","fontStyle","Margin0","margin","DynamicForm","formConfig","FormConfig","renderErrorMessage","renderQuestion","validateForm","handleChange","onSelectionChangeCallback","onSelectionReferenceListChange","onselectionDateRangeChange","ListFields","disabled","valid","e","newDateRange","name","controlType","questionControlType","textbox","textarea","key1","validators","formValidators","require","errorMessage","minLength","maxLength","email","reference","key2","dropdown","key3","key4","questionKey","style","err","question","htmlFor","hidden","data-text","label","readOnly","readonly","type","rows","filterCondition","onSubmit","OnSubmitCallback","field","DropdownQuestion","QuestionBase","TextAreaQuestion","TextboxQuestion","DateRangeQuestion","ReferenceQuestion","numberOfRequest","api","axios","create","getUri","request","delete","head","post","put","patch","response","error","Boolean","window","location","hostname","match","About","width","src","process","alt","href","rel","frameBorder","border","allowFullScreen","Home","opacity","backgroundColor","aria-hidden","height","Toolbar","logout","renderManagementLink","renderProfileLink","renderServiceLink","logoutUser","user","data-toggle","aria-expanded","firstName","lastName","to","onClick","data-target","aria-controls","aria-label","data-app-modern-menu","MapDispatchToProps","meta","connect","store","currentUser","Contact","data-form-type","action","method","data-form-title","data-form-email","data-form-alert","data-form-alert-danger","data-for","data-form-field","required","initialSignUpState","password","repassword","address","phone","redirectLoginPage","mandatoryFields","Container","LoginDiv","CustomTextBox","display","borderRadius","boxShadow","lineHeight","padding","TextCenter","textAlign","LinkA","a","SignUp","handleLogin","LoginRedirectLink","OnRegister","Config","apiServiceURL","server","serverAPI","users","login","register","todo","activities","commonMessage","loginError","userNotFound","signUpError","alertVariants","primary","secondar","danger","warning","info","light","dark","activityStatus","defaultDropDownOptions","all","none","datetimeFormat","yyyyMMdd","ddMMyyyy","localStorageKey","appState","UserServiceApi","configs","axiosConfig","userLogin","userRegister","getAllUsers","getById","credentials","then","localStorage","setItem","catch","objs","User","obj","userId","token","CloseButton","AlertStyle","AlertDiv","show","setShow","flag","onClose","Alert","variant","handleOnCloseButton","initialUserState","UserComponent","userService","getQuestion","handleSubmit","params","form","updateUser","questions","inputTypeDef","order","text","withRouter","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","stopPropagation","SelectColumnFilter","useMemo","Set","row","add","values","fuzzyTextFilterFn","matchSorter","autoRemove","IndeterminateCheckbox","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","useEffect","current","Checkbox","useStyles","makeStyles","theme","root","flexShrink","marginLeft","spacing","TablePaginationActions","classes","useTheme","page","rowsPerPage","onChangePage","IconButton","direction","Math","ceil","max","search","position","shape","fade","palette","common","white","marginRight","breakpoints","up","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","transition","transitions","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","InputBase","inputProps","useToolbarStyles","formControl","minWidth","maxWidth","paddingLeft","paddingRight","highlight","secondary","main","lighten","flex","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","TableToolbar","numSelected","deleteRecordHandler","addRecordHandler","TableName","allColumns","clsx","Tooltip","Typography","FormControl","InputLabel","Select","labelId","multiple","Input","renderValue","join","MenuItem","getToggleHiddenProps","ListItemText","Table","columns","fetchData","controlledPageCount","pageCount","skipPageReset","selectedId","filterTypes","fuzzyText","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","useTable","autoResetPage","manualPagination","useGlobalFilter","useFilters","useSortBy","usePagination","useRowSelect","hooks","Header","getToggleAllRowsSelectedProps","Cell","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","prepareRow","gotoPage","setPageSize","pageIndex","pageSize","selectedRowIds","TableContainer","selectedRowIndex","x","parseInt","selectedRecord","_","includes","TableHead","headerGroup","TableRow","getHeaderGroupProps","headers","TableCell","getHeaderProps","getSortByToggleProps","render","TableSortLabel","active","isSorted","isSortedDesc","canFilter","columnDisableGlobalFilter","TableBody","getRowProps","cells","cell","getCellProps","TableFooter","TablePagination","rowsPerPageOptions","colSpan","SelectProps","native","newPage","onChangeRowsPerPage","Number","ActionsComponent","UserContainer","allUser","userList","isLoading","getUserByFilter","deleteUserHandler","pagination","storeUser","startRow","endRow","slice","records","confirm","deleteRecords","accessor","original","exact","path","payload","ActivityService","getAllData","Activity","description","implemetationPlan","planDate","actualDate","status","assignedTo","comments","createdBy","createdDate","updatedBy","updatedDate","comment","Date","initialActivityStates","activity","isEditRecord","BreakLine","cssProperties","initialCommentStates","newComment","Comment","userComment","commentDate","LeftDiv","RightDiv","ButtonCustom","button","ContainerInlineBlock","CommentDiv","CommentLog","handleSubmitComment","renderCommentTitle","loginUser","toUTCString","onSubmitComment","dangerouslySetInnerHTML","__html","com","renderCommentRawHTML","CommonService","format","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","replace","fixedFormatTwoDigit","number","object1","object2","obj1","obj2","entries","CommentLeftStyle","CommentRightStyle","CommentHeaderStyle","CommentBreakLineStyle","paddingTop","borderBottom","TextCenterStyle","ActivityComponent","activityService","commonService","renderCommentLog","convertFormToObject","getActivityUpdated","update","createNew","activityChanged","activityId","nComment","updateComment","reload","ReactDOMServer","renderToString","convertDateToStringByFormat","currentAct","formAct","sort","b","unshift","ActivityContainer","allActivity","activityList","redirectCreateNew","getActivityByFilter","deleteActivityHandler","addActivityHandler","redirectToCreateNew","storeActivities","acts","initialLoginState","rememberMe","redirectForgotPassword","redirectRegisterPage","LinkDiv","Login","handleChangeByClick","handleForgotPassowrd","handleRegisterPage","checked","ForgotPasswordRedirectLink","RegisterPageRedirectLink","OnLogin","App","redirectLogin","redirectHome","alertConfig","handleOnSubmitLoginForm","handleOnSubmitRegisterForm","handleRenderRedirectRouter","handleRenderAlert","handleOnCloseAlert","username","newUser","Footer","initialState","updateRequest","noRequests","persistConfig","storage","rootReducer","combineReducers","persistedReducer","persistReducer","middlewares","thunkMiddleware","middlewareConfig","interceptors","req","getState","dispatch","getSourceAction","middleWareEnhancer","applyMiddleware","axiosMiddleware","createStore","composeWithDevTools","persistor","persistStore","override","css","LoadingSpinner","size","loading","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","checkbox","datetime","datetimeLocal","file","image","radio","range","reset","submit","tel","time","week","qs","timeout","baseURL","Accept","paramsSerializer","indices"],"mappings":"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","file":"static/js/main.b14b2e14.chunk.js","sourcesContent":["import { QuestionBase } from \"./questions/question-base\";\n\n\nexport interface DynamicFormProps {\n    ListFields: QuestionBase<string>[],\n    OnSubmitCallback: (form: DynamicFormStates) => void\n}\n\nexport interface DynamicFormStates {\n    originalListFields: any,\n    listFields: any,\n    errors:{[s:string]: string[]},\n    disableSubmitButton: boolean\n    \n}\n\nexport const initialDynamicFormStates: DynamicFormStates = {\n    originalListFields: {},\n    listFields : {},\n    errors: {},\n    disableSubmitButton: true\n}","import { KeyValue } from \"../../../class/common/keyValue\";\n\nexport interface ReferenceProps {\n    serverUrl: string,\n    displayField: string,   //the field will show on search bar\n    listFields?: string[],  //the list of field will show in options\n    filterCondition?: string,\n    onSelectionChange: (selected: ReferenceStates) => void,\n    selected?: any,\n    default?: KeyValue,\n    searchBar?: boolean,\n    referenceKey: string\n}\n\nexport interface ReferenceStates {\n    referenceKey: string,\n    originalSelected: any,\n    selected: any,\n    selectedValue: string,\n    searchKey: string,\n    data: any[],\n    originalData: any[]\n}\n\nexport const initialReferenceStates: ReferenceStates = {\n    referenceKey: '',\n    //default value is None\n    originalSelected: null,\n    selected: null,\n    selectedValue: '',\n    searchKey: '',\n    data: [],\n    originalData: []\n}","\nimport { AxiosRequestConfig, AxiosResponse } from \"axios\";\nimport { commonAPI } from \"../../../service/common-api.service\";\n\nexport class ReferenceService {\n    constructor(config: AxiosRequestConfig) {\n        this.getByUrl = this.getByUrl.bind(this);\n    }\n\n    /**\n     * Get data by url\n     */\n    public async getByUrl(url: string): Promise<any[]>{\n        try {\n            const res: AxiosResponse<any[]> = await commonAPI.get<any, AxiosResponse<any[]>>(url);\n            return commonAPI.success(res);\n        } catch (error) {\n            throw error;\n        }\n    }\n}","import React from 'react';\nimport { ReferenceProps, ReferenceStates, initialReferenceStates } from './ReferencePropsStates';\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\nimport './ReferenceList.scss';\nimport styled from 'styled-components';\nimport { ReferenceService } from './Reference.service';\nimport * as apiConfig from '../../../configuration/api.config';\nconst SearchInput = styled.input`\n    border-radius: 0px;\n    border-left: 0px;\n    border-right: 0px;\n`;\nexport class ReferenceList extends React.Component<ReferenceProps, ReferenceStates>{\n    referenceService: ReferenceService;\n    constructor(props: ReferenceProps) {\n        super(props);\n\n        this.state = initialReferenceStates;\n        this.referenceService = new ReferenceService(apiConfig.apiConfig);\n        this.onSelectionChangeHandler = this.onSelectionChangeHandler.bind(this);\n        this.renderSearchBar = this.renderSearchBar.bind(this);\n        this.onSearchInputChangeHandler = this.onSearchInputChangeHandler.bind(this);\n    }\n\n    async componentDidMount() {\n        //set selected value for default\n        let selected = this.state.selected;\n        if (this.props.selected)\n            selected = this.props.selected;\n        else if (this.props.default)\n            selected = this.props.default;\n\n        let allReference = await this.referenceService.getByUrl(this.props.serverUrl);\n        let displayedData: any[] = [];\n        allReference.forEach(element => {\n            let newObj = JSON.parse(JSON.stringify(element));   //clone object\n            //remove the fields that do not display\n            if (this.props.listFields) {\n                for (let p in newObj) {\n                    if (this.props.listFields.indexOf(p) === -1 && p !== '_id' && p !== this.props.displayField) {\n                        delete newObj[p];\n                    }\n                }\n                displayedData.push(newObj);\n            }\n        });\n        this.setState({\n            selected: selected,\n            originalSelected: JSON.parse(JSON.stringify(selected)),\n            referenceKey: this.props.referenceKey,\n            data: displayedData,\n            originalData: allReference\n        });\n    }\n\n    componentDidUpdate() {\n        //listen in case the selected value is retrieved from server\n        if (JSON.stringify(this.state.originalSelected) !== JSON.stringify(this.props.selected)) {\n            this.setState({\n                selected: this.props.selected,\n                originalSelected: JSON.parse(JSON.stringify(this.props.selected)),\n                selectedValue: this.props.selected[this.props.displayField]\n            });\n        }\n    }\n\n    /**\n     * Render the search bar: search by display field\n     */\n    renderSearchBar() {\n        let result;\n        if (this.props.searchBar) {\n            result = (\n                <div className=\"search-bar\">\n                    <SearchInput className=\"form-control\" onChange={this.onSearchInputChangeHandler} placeholder=\"Search ...\" />\n                    <Dropdown.Divider></Dropdown.Divider>\n                </div>\n            );\n        }\n        return result;\n    }\n\n    /**\n     * Search input change\n     * @param event input event\n     */\n    onSearchInputChangeHandler(event: any) {\n        event.preventDefault();\n        this.setState({\n            searchKey: event.target.value\n        });\n    }\n\n    /**\n     * handle selection changed\n     * @param eventKey selected key\n     * @param event event\n     */\n    onSelectionChangeHandler(eventKey: any, event: Object) {\n        //get the selected option\n        let preSelected = this.state.selected;\n        for (let i = 0; i < this.state.originalData.length; i++) {\n            if (this.state.originalData[i]._id.toString() === eventKey.toString()) {\n                preSelected = this.state.originalData[i];\n                break;\n            }\n        }\n        //update selected option and send it to parent component\n        this.setState({\n            selected: preSelected,\n            selectedValue: preSelected[this.props.displayField]\n        }, () => {\n            this.props.onSelectionChange(this.state);\n        });\n    }\n\n    render() {\n        return (\n            <DropdownButton id=\"reference-box\"\n                title={this.state.selectedValue}\n                onSelect={this.onSelectionChangeHandler}>\n                {\n                    this.renderSearchBar()\n                }\n                {\n                    this.state.data\n                        .filter((val, i) => {\n                            return val[this.props.displayField].indexOf(this.state.searchKey) !== -1 || this.state.searchKey === \"\";\n                        })\n                        .map((option, index) => (\n                            <Dropdown.Item key={`${option['_id']}${index}`} eventKey={option['_id']} className=\"option\" >\n                                {\n                                    Object.keys(option).filter((val) => {\n                                        return val !== '_id';\n                                    }).map((opt, ind) => (\n                                        <span className=\"col-sm-3\" key={ind}>{option[opt]}</span>\n                                    ))\n                                }\n                            </Dropdown.Item>\n                        ))\n                }\n            </DropdownButton>\n        )\n    }\n}","import { KeyValue } from \"../../../class/common/keyValue\";\n\nexport interface DropDownProps {\n    options: KeyValue[],\n    dropdownKey: string,\n    onSelectionChange: (selected: DropDownStates) => void,\n    selected?: KeyValue,\n    searchBar?: boolean\n}\n\nexport interface DropDownStates {\n    dropdownKey: string,\n    originalSelected: any,\n    selected: any,\n    searchKey: string,\n}\n\nexport const initialDropDownStates: DropDownStates = {\n    dropdownKey: '',\n    originalSelected: new KeyValue({\n        key: 0,\n        value: \"--None--\"\n    }),\n    //default value is None\n    selected: new KeyValue({\n        key: 0,\n        value: \"--None--\"\n    }),\n    searchKey: ''\n}","import React from 'react';\nimport { DropDownProps, DropDownStates, initialDropDownStates } from './DropDownPropsStates';\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\nimport './DropdownList.scss';\nimport styled from 'styled-components';\nconst SearchInput = styled.input`\n    border-radius: 0px;\n    border-left: 0px;\n    border-right: 0px;\n`;\nexport class CustomDropDown extends React.Component<DropDownProps, DropDownStates>{\n    constructor(props: DropDownProps) {\n        super(props);\n\n        this.state = initialDropDownStates;\n        this.onSelectionChangeHandler = this.onSelectionChangeHandler.bind(this);\n        this.renderSearchBar = this.renderSearchBar.bind(this);\n        this.onSearchInputChangeHandler = this.onSearchInputChangeHandler.bind(this);\n    }\n\n    componentDidMount() {\n        //set selected value for default\n        let preSelected = this.props.options[0];    //default option\n        if(this.props.selected && this.props.selected.key != null){\n            preSelected = this.props.selected;\n        }\n        \n        this.setState({\n            selected: preSelected,\n            originalSelected: JSON.parse(JSON.stringify(preSelected)),\n            dropdownKey: this.props.dropdownKey\n        });\n    }\n\n    componentDidUpdate() {\n        //listen in case the selected value is retrieved from server\n        if (this.props.selected && this.props.selected.key !== null && JSON.stringify(this.state.originalSelected) !== JSON.stringify(this.props.selected)) {\n            this.setState({\n                selected: JSON.parse(JSON.stringify(this.props.selected)),\n                originalSelected: JSON.parse(JSON.stringify(this.props.selected))\n            });\n        }\n    }\n\n    renderSearchBar(){\n        let result;\n        if(this.props.searchBar){\n            result = (\n                <div className=\"search-bar\">\n                    <SearchInput className=\"form-control\" onChange={this.onSearchInputChangeHandler} placeholder=\"Search ...\" />\n                    <Dropdown.Divider></Dropdown.Divider>\n                </div>\n            );\n        }\n        return result;\n    }\n\n    onSearchInputChangeHandler(event: any){\n        event.preventDefault();\n        this.setState({\n            searchKey: event.target.value\n        });\n    }\n\n    /**\n     * handle selection changed\n     * @param eventKey selected key\n     * @param event event\n     */\n    onSelectionChangeHandler(eventKey: any, event: Object) {\n        //get the selected option\n        let preSelected = this.state.selected;\n        for(let i = 0; i < this.props.options.length; i++){\n            if(this.props.options[i].key.toString() === eventKey.toString()){\n                preSelected = this.props.options[i];\n                break;\n            }\n        }\n        //update selected option and send it to parent component\n        this.setState({\n            selected: preSelected\n        }, () => {\n            this.props.onSelectionChange(this.state);\n        });\n    }\n\n    render() {\n        return (\n            <DropdownButton id=\"dropdown-box\"  \n                title={this.state.selected.value} \n                onSelect={this.onSelectionChangeHandler}>\n                {\n                    this.renderSearchBar()\n                }\n                {\n                    this.props.options.filter((val, index) => {\n                        return val.value.indexOf(this.state.searchKey) !== -1 || this.state.searchKey === '';\n                    })\n                    .map((option, index) => (\n                        <Dropdown.Item key={`${option.key}${index}`} eventKey={option.key} className=\"option\" >\n                            {option.value}\n                        </Dropdown.Item>\n                    ))\n                }\n            </DropdownButton>\n        )\n    }\n}","import { ODateRange } from \"../../../class/common/date-range\";\n\nexport interface DateRangeProps {\n    dateRange?: ODateRange,\n    onSelectionChange: (selected: DateRangeStates) => void,\n    referenceKey: string\n}\n\nexport interface DateRangeStates {\n    referenceKey: string,\n    originalDateRange: ODateRange,\n    dateRange: ODateRange,\n    startDate: any,\n    endDate: any\n}\n\nexport const initialDateRangeStates: DateRangeStates = {\n    referenceKey: '',\n    originalDateRange: new ODateRange(),\n    dateRange: new ODateRange(),\n    startDate: null,\n    endDate: null\n}","/**\n * Require react-datepicker\n */\nimport React from 'react';\nimport ReactDatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { DateRangeProps, DateRangeStates, initialDateRangeStates } from './DateRangePropsStates';\nimport './DateRange.scss';\nimport styled from 'styled-components';\nimport { ODateRange } from '../../../class/common/date-range';\nconst ContainerDiv = styled.div`\n    width: 100%;\n`;\nconst StartDateDiv = styled.div`\n    display: inline-block;\n    width: 50%;\n    padding: 0px 20px;\n`;\nconst EndDateDiv = styled.div`\n    display: inline-block;\n    width: 50%;\n    padding: 0px 20px;\n`;\nexport class DateRange extends React.Component<DateRangeProps, DateRangeStates>{\n    constructor(props: DateRangeProps) {\n        super(props);\n\n        this.state = initialDateRangeStates;\n\n        this.handleChangeStartDate = this.handleChangeStartDate.bind(this);\n        this.handleChangeEndDate = this.handleChangeEndDate.bind(this);\n    }\n\n    componentDidMount() {\n        let dateRange = new ODateRange();\n        if (this.props.dateRange) {\n            dateRange.startDate = this.props.dateRange.startDate || undefined;\n            dateRange.endDate = this.props.dateRange.endDate || undefined;\n        }\n        this.setState({\n            referenceKey: this.props.referenceKey,\n            dateRange: dateRange,\n            originalDateRange: JSON.parse(JSON.stringify(dateRange))\n        });\n    }\n\n    componentDidUpdate() {\n        if(this.props.dateRange){\n            let dateRange = new ODateRange();\n            dateRange.startDate = this.props.dateRange.startDate || undefined;\n            dateRange.endDate = this.props.dateRange.endDate || undefined;\n            if (JSON.stringify(this.state.originalDateRange) !== JSON.stringify(dateRange)) {\n                this.setState({\n                    dateRange: dateRange,\n                    originalDateRange: JSON.parse(JSON.stringify(dateRange))\n                });\n            }\n        }\n    }\n\n    /**\n     * handle start date selection changed\n     * @param date selected date\n     */\n    handleChangeStartDate(date: any) {\n        console.log(date);\n        let dateRange = new ODateRange({\n            startDate: date,\n            endDate: this.state.dateRange.endDate\n        });\n        this.setState({\n            dateRange: dateRange\n        }, () => {\n            this.props.onSelectionChange(this.state);\n        });\n    }\n\n    /**\n     * handle end date selection changed\n     * @param date selected date\n     */\n    handleChangeEndDate(date: any) {\n        console.log(date);\n        let dateRange = new ODateRange({\n            startDate: this.state.dateRange.startDate,\n            endDate: date\n        });\n        this.setState({\n            dateRange: dateRange\n        }, () => {\n            this.props.onSelectionChange(this.state);\n        });\n    }\n\n    render() {\n        return (\n            <ContainerDiv>\n                <StartDateDiv>\n                    <div>Start Date</div>\n                    <ReactDatePicker\n                        dateFormat=\"yyyy/MM/dd\"\n                        maxDate={this.state.dateRange.endDate}\n                        selected={this.state.dateRange.startDate}\n                        onChange={this.handleChangeStartDate}\n                    />\n                </StartDateDiv>\n                <EndDateDiv>\n                    <div>End Date</div>\n                    <ReactDatePicker\n                        dateFormat=\"yyyy/MM/dd\"\n                        minDate={this.state.dateRange.startDate}\n                        selected={this.state.dateRange.endDate}\n                        onChange={this.handleChangeEndDate}\n                    />\n                </EndDateDiv>\n            </ContainerDiv>\n        )\n    }\n}","import React from 'react';\nimport { DynamicFormProps, DynamicFormStates, initialDynamicFormStates } from './DynamicFormPropState';\nimport styled from 'styled-components';\nimport { QuestionBase } from './questions/question-base';\nimport { FormConfig } from './form.config';\nimport { CustomDropDown } from '../Variables/DropdownList/DropdownList';\nimport { DropDownStates } from '../Variables/DropdownList/DropDownPropsStates';\nimport { ReferenceList } from '../Variables/ReferenceList/ReferenceList';\nimport { ReferenceStates } from '../Variables/ReferenceList/ReferencePropsStates';\nimport { DateRange } from '../Variables/DateRange/DateRange';\nimport { DateRangeStates } from '../Variables/DateRange/DateRangePropsStates';\nimport './DynamicForm.scss';\nimport { ODateRange } from '../../class/common/date-range';\nconst ContainerDiv = styled.div`\n`;\nconst DangerText: React.CSSProperties = {\n    color: 'red',\n    fontStyle: 'italic'\n};\nconst Margin0: React.CSSProperties = {\n    margin: 0\n};\nexport class DynamicForm extends React.Component<DynamicFormProps, DynamicFormStates>{\n    formConfig: FormConfig;\n    constructor(props: DynamicFormProps) {\n        super(props);\n\n        this.formConfig = new FormConfig();\n        this.state = initialDynamicFormStates;\n\n        this.renderErrorMessage = this.renderErrorMessage.bind(this);\n        this.renderQuestion = this.renderQuestion.bind(this);\n        this.validateForm = this.validateForm.bind(this);\n        //handle change\n        this.handleChange = this.handleChange.bind(this);\n        this.onSelectionChangeCallback = this.onSelectionChangeCallback.bind(this);\n        this.onSelectionReferenceListChange = this.onSelectionReferenceListChange.bind(this);\n        this.onselectionDateRangeChange = this.onselectionDateRangeChange.bind(this);\n    }\n\n    componentDidUpdate() {\n        //wait for update from container element\n        let listFields: { [s: string]: any } = {};\n        this.props.ListFields.forEach((val) => {\n            listFields[val.key] = val.value;\n        });\n        if (JSON.stringify(this.state.originalListFields) !== JSON.stringify(listFields)) {\n            this.setState({\n                listFields: listFields,\n                originalListFields: JSON.parse(JSON.stringify(listFields))\n            }, () => {\n                let { errors, valid } = this.validateForm();\n                let disabled = !valid;\n                this.setState({\n                    disableSubmitButton: disabled,\n                    errors\n                });\n            });\n        }\n    }\n\n    /**\n     * Handle date range selection changed\n     * @param e date range state\n     */\n    onselectionDateRangeChange(e: DateRangeStates){\n        let listFields = this.state.listFields;\n        let newDateRange:ODateRange = e.dateRange;\n        listFields[e.referenceKey] = newDateRange;\n        this.setState({\n            listFields: listFields\n        }, ()=> {\n            let { errors, valid } = this.validateForm();\n            let disabled = !valid;\n            this.setState({\n                disableSubmitButton: disabled,\n                errors\n            });\n        })\n    }\n\n    /**\n     * Handle reference list selected record\n     * @param e reference state\n     */\n    onSelectionReferenceListChange(e: ReferenceStates){\n        let listFields = this.state.listFields;\n        listFields[e.referenceKey] = e.selected;\n        this.setState({\n            listFields\n        }, () => {\n            let { errors, valid } = this.validateForm();\n            let disabled = !valid;\n            this.setState({\n                disableSubmitButton: disabled,\n                errors\n            });\n        });\n    }\n\n    /**\n     * Handle dropdown list change\n     * @param e Dropdown state\n     */\n    onSelectionChangeCallback(e: DropDownStates){\n        let listFields = this.state.listFields;\n        listFields[e.dropdownKey] = e.selected;\n        this.setState<never>({\n            listFields\n        }, () => {\n            let { errors, valid } = this.validateForm();\n            let disabled = !valid;\n            this.setState({\n                disableSubmitButton: disabled,\n                errors\n            });\n        });\n    }\n\n    /**\n     * Handle input change\n     * @param event event\n     */\n    handleChange(event: any) {\n        event.preventDefault();\n        const { name, value } = event.target;\n        let listFields = this.state.listFields;\n        listFields[name] = value;\n        this.setState<never>({\n            listFields\n        }, () => {\n            let { errors, valid } = this.validateForm();\n            let disabled = !valid;\n            this.setState({\n                disableSubmitButton: disabled,\n                errors\n            });\n        });\n    }\n\n    /**\n     * Validate the form\n     */\n    validateForm() {\n        let valid = true;\n        let errors: { [s: string]: string[] } = {};\n        this.props.ListFields.forEach(element => {\n            errors[element.key] = [];\n            switch(element.controlType){\n                case this.formConfig.questionControlType.textbox:\n                case this.formConfig.questionControlType.textarea:\n                    for (var key1 in element.validators) {\n                        switch (key1) {\n                            case this.formConfig.formValidators.require:\n                                if (!(this.state.listFields[element.key] && this.state.listFields[element.key] !== \"\")) {\n                                    errors[element.key].push(\n                                        element.validators[key1].errorMessage\n                                    );\n                                }\n                                break;\n                            case this.formConfig.formValidators.minLength:\n                                if (!(this.state.listFields[element.key] && this.state.listFields[element.key].length >= element.validators[key].value)) {\n                                    errors[element.key].push(\n                                        element.validators[key1].errorMessage\n                                    );\n                                }\n                                break;\n                            case this.formConfig.formValidators.maxLength:\n                                if (!(this.state.listFields[element.key] && this.state.listFields[element.key].length <= element.validators[key].value)) {\n                                    errors[element.key].push(\n                                        element.validators[key1].errorMessage\n                                    );\n                                }\n                                break;\n                            case this.formConfig.formValidators.email:\n                                break;\n                            default:\n                                break;\n                        }\n                    }\n                    break;\n                case this.formConfig.questionControlType.reference:\n                    for (var key2 in element.validators) {\n                        switch (key2) {\n                            case this.formConfig.formValidators.require:\n                                if (!this.state.listFields[element.key] || this.state.listFields[element.key]._id == null ) {\n                                    errors[element.key].push(\n                                        element.validators[key2].errorMessage\n                                    );\n                                }\n                                break;\n                            default:\n                                break;\n                        }\n                    }\n                    break;\n                case this.formConfig.questionControlType.dropdown:\n                    for (var key3 in element.validators) {\n                        switch (key3) {\n                            case this.formConfig.formValidators.require:\n                                //not have value or value is 0 = [--none--]\n                                if (!this.state.listFields[element.key] \n                                    || !this.state.listFields[element.key].key\n                                    || this.state.listFields[element.key].key === 0\n                                    ) {\n                                    errors[element.key].push(\n                                        element.validators[key3].errorMessage\n                                    );\n                                }\n                                break;\n                            default:\n                                break;\n                        }\n                    }\n                    break;\n                case this.formConfig.questionControlType.dateRange:\n                    for (var key4 in element.validators) {\n                        switch (key4) {\n                            case this.formConfig.formValidators.require:\n                                //not have value or value of one of two date is null\n                                if (!this.state.listFields[element.key] || \n                                    this.state.listFields[element.key].startDate == null ||\n                                    this.state.listFields[element.key].endDate == null) {\n                                    errors[element.key].push(\n                                        element.validators[key4].errorMessage\n                                    );\n                                }\n                                break;\n                            default:\n                                break;\n                        }\n                    }\n                    break;\n                default:\n                    break;\n            }\n            \n        });\n        for (var key in errors) {\n            if (errors[key].length > 0) {\n                valid = false;\n                break;\n            }\n        }\n        return { errors, valid };\n    }\n\n    /**\n     * Render error message base on question key\n     * @param questionKey question key\n     */\n    renderErrorMessage(questionKey: string) {\n        //get state.error message base on question key\n        let errors = this.state.errors[questionKey];\n        //if there is no error => return\n        if (!errors) return;\n        //else display error message\n        return (\n            <div style={DangerText}>\n                {\n                    errors.map((err, i) => (\n                        <div key={i}>\n                            <span>{err}</span>\n                        </div>\n                    ))\n                }\n            </div>\n        );\n    }\n\n    /**\n     * Render questions\n     * @param question question definition\n     */\n    renderQuestion(question: QuestionBase<any>) {\n        //depend on type of question => render appropriate element\n        switch (question.controlType) {\n            case this.formConfig.questionControlType.textbox: //type textbox\n                return (\n                    <fieldset key={question.key} className=\"form-group\">\n                        <label htmlFor={question.key}>\n                            <span hidden={!question.validators['required']} style={DangerText}>* </span><span data-text={question.label}>{question.label}</span>\n                        </label>\n                        <input className=\"form-control\"\n                            onChange={this.handleChange}\n                            readOnly={question.readonly}\n                            type={question.type}\n                            name={question.key}\n                            value={this.state.listFields[question.key]}\n                            id={question.key} />\n                        {this.renderErrorMessage(question.key)}\n                    </fieldset>\n                );\n            case this.formConfig.questionControlType.textarea:    //type text area\n                return (\n                    <fieldset key={question.key} className=\"form-group\">\n                        <label htmlFor={question.key}>\n                            <span hidden={!question.validators['required']} style={DangerText}>* </span><span data-text={question.label}>{question.label}</span>\n                        </label>\n                        <textarea className=\"form-control\"\n                            onChange={this.handleChange}\n                            readOnly={question.readonly}\n                            rows={question.rows}\n                            name={question.key}\n                            value={this.state.listFields[question.key]}\n                            id={question.key} ></textarea>\n                        {this.renderErrorMessage(question.key)}\n                    </fieldset>\n                );\n            case this.formConfig.questionControlType.dropdown:    //type dropdown\n                return (\n                    <fieldset key={question.key} className=\"form-group\">\n                        <label htmlFor={question.key}>\n                            <span hidden={!question.validators['required']} style={DangerText}>* </span><span data-text={question.label}>{question.label}</span>\n                        </label>\n                        <CustomDropDown searchBar={question.searchBar} \n                            selected={question.value}\n                            dropdownKey={question.key} \n                            onSelectionChange={this.onSelectionChangeCallback} \n                            options={question.options}></CustomDropDown>\n                        {this.renderErrorMessage(question.key)}\n                    </fieldset>\n                );\n            case this.formConfig.questionControlType.reference:\n                return (\n                    <fieldset key={question.key} className=\"form-group\">\n                        <label htmlFor={question.key}>\n                            <span hidden={!question.validators['required']} style={DangerText}>* </span><span data-text={question.label}>{question.label}</span>\n                        </label>\n                        <ReferenceList serverUrl={question.serverUrl} \n                            displayField={question.displayField}\n                            listFields={question.listFields}\n                            filterCondition={question.filterCondition}\n                            referenceKey={question.key}\n                            searchBar={question.searchBar} \n                            selected={question.value}\n                            onSelectionChange={this.onSelectionReferenceListChange}\n                            ></ReferenceList>\n                        {this.renderErrorMessage(question.key)}\n                    </fieldset>\n                )\n            case this.formConfig.questionControlType.dateRange:\n                return (\n                    <fieldset key={question.key} className=\"form-group\">\n                        <label htmlFor={question.key}>\n                            <span hidden={!question.validators['required']} style={DangerText}>* </span><span data-text={question.label}>{question.label}</span>\n                        </label>\n                        <DateRange referenceKey={question.key}\n                            dateRange={question.value}\n                            onSelectionChange={this.onselectionDateRangeChange}>\n                        </DateRange>\n                        {this.renderErrorMessage(question.key)}\n                    </fieldset>\n                )\n            default:\n                break;\n        }\n    }\n\n    render() {\n        return (\n            <ContainerDiv>\n                <form onSubmit={(e) => { e.preventDefault(); this.props.OnSubmitCallback(this.state) }}>\n                    {this.props.ListFields.map((field, i) => (\n                        this.renderQuestion(field)\n                    ))}\n                    <input style={Margin0}\n                        type=\"submit\"\n                        value=\"Submit\"\n                        disabled={this.state.disableSubmitButton}\n                        className=\"btn btn-primary btn-block\" />\n                </form>\n            </ContainerDiv>\n        );\n    }\n}","import { QuestionBase } from './question-base';\nimport { FormConfig } from '../form.config';\n\nexport class DropdownQuestion extends QuestionBase<string> {\n  controlType = '';\n  options: {key: string, value: string}[] = [];\n\n  constructor(options: any) {\n    super(options);\n    this.options = options['options'] || [];\n    this.controlType = new FormConfig().questionControlType.dropdown;\n  }\n}\n","import { QuestionBase } from './question-base';\nimport { FormConfig } from '../form.config';\n\nexport class TextAreaQuestion extends QuestionBase<string> {\n  controlType = '';\n  type: string;\n\n  constructor(options: any) {\n    super(options);\n    this.type = options['type'] || '';\n    this.controlType = new FormConfig().questionControlType.textarea;\n  }\n}\n","import { QuestionBase } from './question-base';\nimport { FormConfig } from '../form.config';\n\nexport class TextboxQuestion extends QuestionBase<string> {\n  controlType = '';\n  type: string;\n\n  constructor(options: any) {\n    super(options);\n    this.type = options['type'] || '';\n    this.controlType = new FormConfig().questionControlType.textbox;\n  }\n}\n","import { QuestionBase } from './question-base';\nimport { FormConfig } from '../form.config';\nimport { ODateRange } from '../../../class/common/date-range';\n\nexport class DateRangeQuestion extends QuestionBase<ODateRange> {\n  controlType = '';\n\n  constructor(options: any) {\n    super(options);\n    this.controlType = new FormConfig().questionControlType.dateRange;\n  }\n}\n","import { QuestionBase } from './question-base';\nimport { FormConfig } from '../form.config';\n\nexport class ReferenceQuestion extends QuestionBase<string> {\n  controlType = '';\n\n  constructor(options: any) {\n    super(options);\n    this.controlType = new FormConfig().questionControlType.reference;\n  }\n}\n","import axios, { AxiosError, AxiosRequestConfig, AxiosResponse, AxiosInstance } from \"axios\";\nimport { apiConfig } from \"../configuration/api.config\";\n\n/**\n * ES6 Axios Class.\n *\n * @class Api\n * @extends {Axios}\n * @example\n * class UserApi extends Api {\n *   public constructor (config) {\n *     super(config);\n *\n *     this.login=this.login.bind(this);\n *   }\n *\n *   public login (user: User) {\n *     return this.api.post<string, User, AxiosResponse<User>>(\"https://www.domain/login\", {name: user.name, pass: user.pass})\n *        .then((res: AxiosResponse<string>) => res.data);\n *   }\n * }\n */\nclass Api {\n    [x: string]: any;\n    numberOfRequest: number;\n    api: AxiosInstance;\n    /**\n     * Creates an instance of Api.\n     *\n     * @param {import(\"axios\").AxiosRequestConfig} [config] - axios configuration.\n     * @memberof Api\n     */\n    public constructor(config?: AxiosRequestConfig) {\n        this.api = axios.create(config);\n        this.numberOfRequest = 0;\n\n        this.getUri = this.getUri.bind(this);\n        this.request = this.request.bind(this);\n        this.get = this.get.bind(this);\n        this.delete = this.delete.bind(this);\n        this.head = this.head.bind(this);\n        this.post = this.post.bind(this);\n        this.put = this.put.bind(this);\n        this.patch = this.patch.bind(this);\n    }\n\n    /**\n     * Get Uri\n     *\n     * @param {import(\"axios\").AxiosRequestConfig} [config]\n     * @returns {string}\n     * @memberof Api\n     */\n    public getUri(config?: AxiosRequestConfig): string {\n        return this.api.getUri(config);\n    }\n\n    /**\n     * Generic request.\n     *\n     * @access public\n     * @template T - `TYPE`: expected object.\n     * @template R - `RESPONSE`: expected object inside a axios response format.\n     * @param {import(\"axios\").AxiosRequestConfig} [config] - axios request configuration.\n     * @returns {Promise<R>} - HTTP axios response payload.\n     * @memberof Api\n     *\n     * @example\n     * api.request({\n     *   method: \"GET|POST|DELETE|PUT|PATCH\"\n     *   baseUrl: \"http://www.domain.com\",\n     *   url: \"/api/v1/users\",\n     *   headers: {\n     *     \"Content-Type\": \"application/json\"\n     *  }\n     * }).then((response: AxiosResponse<User>) => response.data)\n     *\n     */\n    public request<T, R = AxiosResponse<T>>(config: AxiosRequestConfig): Promise<R> {\n        return this.api.request(config);\n    }\n\n    /**\n     * HTTP GET method, used to fetch data `statusCode`: 200.\n     *\n     * @access public\n     * @template T - `TYPE`: expected object.\n     * @template R - `RESPONSE`: expected object inside a axios response format.\n     * @param {string} url - endpoint you want to reach.\n     * @param {import(\"axios\").AxiosRequestConfig} [config] - axios request configuration.\n     * @returns {Promise<R>} HTTP `axios` response payload.\n     * @memberof Api\n     */\n    public get<T, R = AxiosResponse<T>>(url: string, config?: AxiosRequestConfig): Promise<R> {\n        return this.api.get(url, config);\n    }\n\n    /**\n     * HTTP DELETE method, `statusCode`: 204 No Content.\n     *\n     * @access public\n     * @template T - `TYPE`: expected object.\n     * @template R - `RESPONSE`: expected object inside a axios response format.\n     * @param {string} url - endpoint you want to reach.\n     * @param {import(\"axios\").AxiosRequestConfig} [config] - axios request configuration.\n     * @returns {Promise<R>} - HTTP [axios] response payload.\n     * @memberof Api\n     */\n    public delete<T, R = AxiosResponse<T>>(url: string, config?: AxiosRequestConfig): Promise<R> {\n        return this.api.delete(url, config);\n    }\n\n    /**\n     * HTTP HEAD method.\n     *\n     * @access public\n     * @template T - `TYPE`: expected object.\n     * @template R - `RESPONSE`: expected object inside a axios response format.\n     * @param {string} url - endpoint you want to reach.\n     * @param {import(\"axios\").AxiosRequestConfig} [config] - axios request configuration.\n     * @returns {Promise<R>} - HTTP [axios] response payload.\n     * @memberof Api\n     */\n    public head<T, R = AxiosResponse<T>>(url: string, config?: AxiosRequestConfig): Promise<R> {\n        return this.api.head(url, config);\n    }\n\n    /**\n     * HTTP POST method `statusCode`: 201 Created.\n     *\n     * @access public\n     * @template T - `TYPE`: expected object.\n     * @template B - `BODY`: body request object.\n     * @template R - `RESPONSE`: expected object inside a axios response format.\n     * @param {string} url - endpoint you want to reach.\n     * @param {B} data - payload to be send as the `request body`,\n     * @param {import(\"axios\").AxiosRequestConfig} [config] - axios request configuration.\n     * @returns {Promise<R>} - HTTP [axios] response payload.\n     * @memberof Api\n     */\n    public post<T, B, R = AxiosResponse<T>>(url: string, data?: B, config?: AxiosRequestConfig): Promise<R> {\n        return this.api.post(url, data, config);\n    }\n\n    /**\n     * HTTP PUT method.\n     *\n     * @access public\n     * @template T - `TYPE`: expected object.\n     * @template B - `BODY`: body request object.\n     * @template R - `RESPONSE`: expected object inside a axios response format.\n     * @param {string} url - endpoint you want to reach.\n     * @param {B} data - payload to be send as the `request body`,\n     * @param {import(\"axios\").AxiosRequestConfig} [config] - axios request configuration.\n     * @returns {Promise<R>} - HTTP [axios] response payload.\n     * @memberof Api\n     */\n    public put<T, B, R = AxiosResponse<T>>(url: string, data?: B, config?: AxiosRequestConfig): Promise<R> {\n        return this.api.put(url, data, config);\n    }\n\n    /**\n      * HTTP PATCH method.\n      *\n      * @access public\n      * @template T - `TYPE`: expected object.\n      * @template B - `BODY`: body request object.\n      * @template R - `RESPONSE`: expected object inside a axios response format.\n      * @param {string} url - endpoint you want to reach.\n      * @param {B} data - payload to be send as the `request body`,\n      * @param {import(\"axios\").AxiosRequestConfig} [config] - axios request configuration.\n      * @returns {Promise<R>} - HTTP [axios] response payload.\n      * @memberof Api\n      */\n    public patch<T, B, R = AxiosResponse<T>>(url: string, data?: B, config?: AxiosRequestConfig): Promise<R> {\n        return this.api.patch(url, data, config);\n    }\n\n    /**\n     *\n     * @template T - type.\n     * @param {import(\"axios\").AxiosResponse<T>} response - axios response.\n     * @returns {T} - expected object.\n     * @memberof Api\n     */\n    public success<T>(response: AxiosResponse<T>): T {\n        return response.data;\n    }\n\n    public error(error: AxiosError<Error>) {\n        throw error;\n    }\n}\n\nexport const commonAPI = new Api(apiConfig);","export * from './DynamicForm';\nexport * from './DynamicFormPropState';\nexport * from './form.config';\nexport * from './class/validator';\nexport * from './questions/question-base';\nexport * from './questions/question-dropdown';\nexport * from './questions/question-textarea';\nexport * from './questions/question-textbox';\nexport * from './questions/question-daterange';\nexport * from './questions/question-reference';","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nexport class About extends React.Component {\n\n    render() {\n        const myStyleBorder = {\n            border: 0\n        } as React.CSSProperties;\n        const mystyleAbout = {\n            width: '90%',\n            margin: 'auto'\n        } as React.CSSProperties;\n        return (\n            <div style={mystyleAbout}>\n                <section className=\"team1 cid-s05ipp9BuT\" id=\"team1-g\">\n                    <div className=\"container align-center\">\n                        <h2 className=\"pb-3 mbr-fonts-style mbr-section-title display-2\">\n                            OUR AWESOME TEAM\n                        </h2>\n                        <h3 className=\"pb-5 mbr-section-subtitle mbr-fonts-style mbr-light display-5\">\n                            Click any icon or text to edit or style it. Click blue \"Gear\" icon in the top right corner to hide/show text and change the block and cards background, icons count and other.\n                        </h3>\n                        <div className=\"row media-row\">\n                            <div className=\"team-item col-lg-3 col-md-6\">\n                                <div className=\"item-image\">\n                                    <img src={`${process.env.PUBLIC_URL}/assets/images/face3.jpg`} alt=\"\" title=\"\" />\n                                </div>\n                                <div className=\"item-caption py-3\">\n                                    <div className=\"item-name px-2\">\n                                        <p className=\"mbr-fonts-style display-5\">Steven Bruce</p>\n                                    </div>\n                                    <div className=\"item-role px-2\">\n                                        <p>Developer</p>\n                                    </div>\n                                    <div className=\"item-social pt-2\">\n                                        <a href=\"https://twitter.com/mobirise\" rel=\"noopener noreferrer\" target=\"_blank\">\n                                            <span className=\"p-1 socicon-twitter socicon mbr-iconfont mbr-iconfont-social\"></span>\n                                        </a>\n                                        <a rel=\"noopener noreferrer\" href=\"https://www.facebook.com/pages/Mobirise/1616226671953247\" target=\"_blank\">\n                                            <span className=\"p-1 socicon-facebook socicon mbr-iconfont mbr-iconfont-social\"></span>\n                                        </a>\n                                        <a rel=\"noopener noreferrer\" href=\"https://plus.google.com/u/0/+Mobirise\" target=\"_blank\">\n                                            <span className=\"p-1 socicon-googleplus socicon mbr-iconfont mbr-iconfont-social\"></span>\n                                        </a>\n                                        <a rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/mobirise\" target=\"_blank\">\n                                            <span className=\"p-1 socicon-linkedin socicon mbr-iconfont mbr-iconfont-social\"></span>\n                                        </a>\n                                        <a rel=\"noopener noreferrer\" href=\"https://www.instagram.com/mobirise/\" target=\"_blank\">\n                                            <span className=\"p-1 socicon-instagram socicon mbr-iconfont mbr-iconfont-social\"></span>\n                                        </a>\n                                        <a rel=\"noopener noreferrer\" href=\"https://www.youtube.com/channel/UCt_tncVAetpK5JeM8L-8jyw\" target=\"_blank\">\n                                            <span className=\"p-1 socicon-youtube socicon mbr-iconfont mbr-iconfont-social\"></span>\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"team-item col-lg-3 col-md-6\">\n                                <div className=\"item-image\">\n                                    <img src={`${process.env.PUBLIC_URL}/assets/images/face2.jpg`} alt=\"\" title=\"\" />\n                                </div>\n                                <div className=\"item-caption py-3\">\n                                    <div className=\"item-name px-2\">\n                                        <p className=\"mbr-fonts-style display-5\">Anissa Fisher</p>\n                                    </div>\n                                    <div className=\"item-role px-2\">\n                                        <p>Developer</p>\n                                    </div>\n                                    <div className=\"item-social pt-2\">\n                                        <a rel=\"noopener noreferrer\" href=\"https://twitter.com/mobirise\" target=\"_blank\">\n                                            <span className=\"p-1 socicon-twitter socicon mbr-iconfont mbr-iconfont-social\"></span>\n                                        </a>\n                                        <a rel=\"noopener noreferrer\" href=\"https://www.facebook.com/pages/Mobirise/1616226671953247\" target=\"_blank\">\n                                            <span className=\"p-1 socicon-facebook socicon mbr-iconfont mbr-iconfont-social\"></span>\n                                        </a>\n                                        <a rel=\"noopener noreferrer\" href=\"https://plus.google.com/u/0/+Mobirise\" target=\"_blank\">\n                                            <span className=\"p-1 socicon-googleplus socicon mbr-iconfont mbr-iconfont-social\"></span>\n                                        </a>\n                                        <a rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/mobirise\" target=\"_blank\">\n                                            <span className=\"p-1 socicon-linkedin socicon mbr-iconfont mbr-iconfont-social\"></span>\n                                        </a>\n                                        <a rel=\"noopener noreferrer\" href=\"https://www.instagram.com/mobirise/\" target=\"_blank\">\n                                            <span className=\"p-1 socicon-instagram socicon mbr-iconfont mbr-iconfont-social\"></span>\n                                        </a>\n                                        <a rel=\"noopener noreferrer\" href=\"https://www.youtube.com/channel/UCt_tncVAetpK5JeM8L-8jyw\" target=\"_blank\">\n                                            <span className=\"p-1 socicon-youtube socicon mbr-iconfont mbr-iconfont-social\"></span>\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"team-item col-lg-3 col-md-6\">\n                                <div className=\"item-image\">\n                                    <img src={`${process.env.PUBLIC_URL}/assets/images/face3.jpg`} alt=\"\" title=\"\" />\n                                </div>\n                                <div className=\"item-caption py-3\">\n                                    <div className=\"item-name px-2\">\n                                        <p className=\"mbr-fonts-style display-5\">Thomas Long</p>\n                                    </div>\n                                    <div className=\"item-role px-2\">\n                                        <p>Developer</p>\n                                    </div>\n                                    <div className=\"item-social pt-2\">\n                                        <a rel=\"noopener noreferrer\" href=\"https://twitter.com/mobirise\" target=\"_blank\">\n                                            <span className=\"p-1 socicon-twitter socicon mbr-iconfont mbr-iconfont-social\"></span>\n                                        </a>\n                                        <a rel=\"noopener noreferrer\" href=\"https://www.facebook.com/pages/Mobirise/1616226671953247\" target=\"_blank\">\n                                            <span className=\"p-1 socicon-facebook socicon mbr-iconfont mbr-iconfont-social\"></span>\n                                        </a>\n                                        <a rel=\"noopener noreferrer\" href=\"https://plus.google.com/u/0/+Mobirise\" target=\"_blank\">\n                                            <span className=\"p-1 socicon-googleplus socicon mbr-iconfont mbr-iconfont-social\"></span>\n                                        </a>\n                                        <a rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/mobirise\" target=\"_blank\">\n                                            <span className=\"p-1 socicon-linkedin socicon mbr-iconfont mbr-iconfont-social\"></span>\n                                        </a>\n                                        <a rel=\"noopener noreferrer\" href=\"https://www.instagram.com/mobirise/\" target=\"_blank\">\n                                            <span className=\"p-1 socicon-instagram socicon mbr-iconfont mbr-iconfont-social\"></span>\n                                        </a>\n                                        <a rel=\"noopener noreferrer\" href=\"https://www.youtube.com/channel/UCt_tncVAetpK5JeM8L-8jyw\" target=\"_blank\">\n                                            <span className=\"p-1 socicon-youtube socicon mbr-iconfont mbr-iconfont-social\"></span>\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"team-item col-lg-3 col-md-6\">\n                                <div className=\"item-image\">\n                                    <img src={`${process.env.PUBLIC_URL}/assets/images/face3.jpg`} alt=\"\" title=\"\" />\n                                </div>\n                                <div className=\"item-caption py-3\">\n                                    <div className=\"item-name px-2\">\n                                        <p className=\"mbr-fonts-style display-5\">Thomas Long</p>\n                                    </div>\n                                    <div className=\"item-role px-2\">\n                                        <p>Developer</p>\n                                    </div>\n                                    <div className=\"item-social pt-2\">\n                                        <a rel=\"noopener noreferrer\" href=\"https://twitter.com/mobirise\" target=\"_blank\">\n                                            <span className=\"p-1 socicon-twitter socicon mbr-iconfont mbr-iconfont-social\"></span>\n                                        </a>\n                                        <a rel=\"noopener noreferrer\" href=\"https://www.facebook.com/pages/Mobirise/1616226671953247\" target=\"_blank\">\n                                            <span className=\"p-1 socicon-facebook socicon mbr-iconfont mbr-iconfont-social\"></span>\n                                        </a>\n                                        <a rel=\"noopener noreferrer\" href=\"https://plus.google.com/u/0/+Mobirise\" target=\"_blank\">\n                                            <span className=\"p-1 socicon-googleplus socicon mbr-iconfont mbr-iconfont-social\"></span>\n                                        </a>\n                                        <a rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/mobirise\" target=\"_blank\">\n                                            <span className=\"p-1 socicon-linkedin socicon mbr-iconfont mbr-iconfont-social\"></span>\n                                        </a>\n                                        <a rel=\"noopener noreferrer\" href=\"https://www.instagram.com/mobirise/\" target=\"_blank\">\n                                            <span className=\"p-1 socicon-instagram socicon mbr-iconfont mbr-iconfont-social\"></span>\n                                        </a>\n                                        <a rel=\"noopener noreferrer\" href=\"https://www.youtube.com/channel/UCt_tncVAetpK5JeM8L-8jyw\" target=\"_blank\">\n                                            <span className=\"p-1 socicon-youtube socicon mbr-iconfont mbr-iconfont-social\"></span>\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n                <section className=\"map2 cid-s05h5y5RKs\" id=\"map2-9\">\n                    <div className=\"container\">\n                        <div className=\"media-container-row\">\n                            <div className=\"col-md-8\">\n                                <div className=\"google-map\">\n                                    <iframe title=\"google map\" frameBorder=\"0\" style={myStyleBorder} src=\"https://www.google.com/maps/embed/v1/place?key=AIzaSyCy9r70T3NYf3PhvVflTo0_zdif2_IoIYs&amp;q=place_id:ChIJ3VvA2VkrdTERuSbE1OXl8E8\" allowFullScreen></iframe>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './Home.scss';\nexport class Home extends React.Component {\n    render() {\n        const myStyle = {\n            opacity: '0.5',\n            backgroundColor: 'rgb(35, 35, 35)'\n        } as React.CSSProperties;\n        const myStyleWidth100 = {\n            width: '100%'\n        } as React.CSSProperties;\n        return (\n            <div>\n                <section className=\"cid-s05dw7YB4t mbr-fullscreen mbr-parallax-background\" id=\"header2-1\">\n                    <div className=\"mbr-overlay\" style={myStyle}></div>\n                    <div className=\"container align-center\">\n                        <div className=\"justify-content-md-center\">\n                            <div className=\"mbr-white\">\n                                <h1 className=\"mbr-section-title mbr-bold pb-3 mbr-fonts-style display-1\">\n                                    GrownUp\n                                </h1>\n                                <p className=\"mbr-text pb-3 mbr-fonts-style display-5\">\n                                    Build the future together\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"mbr-arrow hidden-sm-down\" aria-hidden=\"true\">\n                        <a href=\"#footer\">\n                            <i className=\"mbri-down mbr-iconfont\"></i>\n                        </a>\n                    </div>\n                </section>\n                <section className=\"header7 cid-s05dxD9ioe\" id=\"header7-2\">\n                    <div className=\"container\">\n                        <div className=\"media-container-row\">\n                            <div className=\"media-content align-right\">\n                                <h1 className=\"mbr-section-title mbr-white pb-3 mbr-fonts-style display-1\">\n                                    Intro with Video\n                                </h1>\n                                <div className=\"mbr-section-text mbr-white pb-3\">\n                                    <p className=\"mbr-text mbr-fonts-style display-5\">\n                                        Intro with background color, paddings and a video on the right. Mobirise helps you cut down development time by providing you with a flexible website editor with a drag and drop interface.\n                                    </p>\n                                </div>\n                            </div>\n                            <div className=\"mbr-figure\" style={myStyleWidth100}>\n                                <iframe title=\"introduce-video\" className=\"mbr-embedded-video\" src=\"https://www.youtube.com/embed/uNCr7NdOJgw?rel=0&amp;amp;showinfo=0&amp;autoplay=0&amp;loop=0\" width=\"1280\" height=\"720\" frameBorder=\"0\" allowFullScreen></iframe>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n                <section className=\"testimonials1 cid-s05iIc8MxP\" id=\"testimonials1-h\">\n                    <div className=\"container\">\n                        <div className=\"media-container-row\">\n                            <div className=\"title col-12 align-center\">\n                                <h2 className=\"pb-3 mbr-fonts-style display-2\">\n                                    WHAT OUR FANTASTIC USERS SAY\n                                </h2>\n                                <h3 className=\"mbr-section-subtitle mbr-light pb-3 mbr-fonts-style display-5\">\n                                    This theme is based on Bootstrap 4 - most powerful mobile first framework\n                                </h3>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"container pt-3 mt-2\">\n                        <div className=\"media-container-row\">\n                            <div className=\"mbr-testimonial p-3 align-center col-12 col-md-6 col-lg-4\">\n                                <div className=\"panel-item p-3\">\n                                    <div className=\"card-block\">\n                                        <div className=\"testimonial-photo\">\n                                            <img alt=\"1\" src={`${process.env.PUBLIC_URL}/assets/images/face1.jpg`} />\n                                        </div>\n                                        <p className=\"mbr-text mbr-fonts-style display-7\">\n                                            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Excepturi, aspernatur, voluptatibus, atque, tempore molestiae.\n                                        </p>\n                                    </div>\n                                    <div className=\"card-footer\">\n                                        <div className=\"mbr-author-name mbr-bold mbr-fonts-style display-7\">\n                                            John Smith\n                                        </div>\n                                        <small className=\"mbr-author-desc mbr-italic mbr-light mbr-fonts-style display-7\">\n                                            Developer\n                                        </small>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"mbr-testimonial p-3 align-center col-12 col-md-6 col-lg-4\">\n                                <div className=\"panel-item p-3\">\n                                    <div className=\"card-block\">\n                                        <div className=\"testimonial-photo\">\n                                            <img alt=\"2\" src={`${process.env.PUBLIC_URL}/assets/images/face2.jpg`} />\n                                        </div>\n                                        <p className=\"mbr-text mbr-fonts-style display-7\">\n                                            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Excepturi, aspernatur, voluptatibus, atque, tempore molestiae.\n                                        </p>\n                                    </div>\n                                    <div className=\"card-footer\">\n                                        <div className=\"mbr-author-name mbr-bold mbr-fonts-style display-7\">\n                                            John Smith\n                                        </div>\n                                        <small className=\"mbr-author-desc mbr-italic mbr-light mbr-fonts-style display-7\">\n                                            Developer\n                                        </small>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"mbr-testimonial p-3 align-center col-12 col-md-6 col-lg-4\">\n                                <div className=\"panel-item p-3\">\n                                    <div className=\"card-block\">\n                                        <div className=\"testimonial-photo\">\n                                            <img alt=\"3\" src={`${process.env.PUBLIC_URL}/assets/images/face3.jpg`} />\n                                        </div>\n                                        <p className=\"mbr-text mbr-fonts-style display-7\">\n                                            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Excepturi, aspernatur, voluptatibus, atque, tempore molestiae.\n                                        </p>\n                                    </div>\n                                    <div className=\"card-footer\">\n                                        <div className=\"mbr-author-name mbr-bold mbr-fonts-style display-7\">\n                                            John Smith\n                                        </div>\n                                        <small className=\"mbr-author-desc mbr-italic mbr-light mbr-fonts-style display-7\">\n                                            Developer\n                                        </small>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"mbr-testimonial p-3 align-center col-12 col-md-6 col-lg-4\">\n                                <div className=\"panel-item p-3\">\n                                    <div className=\"card-block\">\n                                        <div className=\"testimonial-photo\">\n                                            <img alt=\"4\" src={`${process.env.PUBLIC_URL}/assets/images/face2.jpg`} />\n                                        </div>\n                                        <p className=\"mbr-text mbr-fonts-style display-7\">\n                                            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Excepturi, aspernatur, voluptatibus, atque, tempore molestiae.\n                                        </p>\n                                    </div>\n                                    <div className=\"card-footer\">\n                                        <div className=\"mbr-author-name mbr-bold mbr-fonts-style display-7\">\n                                            John Smith\n                                        </div>\n                                        <small className=\"mbr-author-desc mbr-italic mbr-light mbr-fonts-style display-7\">\n                                            Developer\n                                        </small>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"mbr-testimonial p-3 align-center col-12 col-md-6 col-lg-4\">\n                                <div className=\"panel-item p-3\">\n                                    <div className=\"card-block\">\n                                        <div className=\"testimonial-photo\">\n                                            <img alt=\"5\" src={`${process.env.PUBLIC_URL}/assets/images/face2.jpg`} />\n                                        </div>\n                                        <p className=\"mbr-text mbr-fonts-style display-7\">\n                                            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Excepturi, aspernatur, voluptatibus, atque, tempore molestiae.\n                                        </p>\n                                    </div>\n                                    <div className=\"card-footer\">\n                                        <div className=\"mbr-author-name mbr-bold mbr-fonts-style display-7\">\n                                            John Smith\n                                        </div>\n                                        <small className=\"mbr-author-desc mbr-italic mbr-light mbr-fonts-style display-7\">\n                                            Developer\n                                        </small>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"mbr-testimonial p-3 align-center col-12 col-md-6 col-lg-4\">\n                                <div className=\"panel-item p-3\">\n                                    <div className=\"card-block\">\n                                        <div className=\"testimonial-photo\">\n                                            <img alt=\"6\" src={`${process.env.PUBLIC_URL}/assets/images/face2.jpg`} />\n                                        </div>\n                                        <p className=\"mbr-text mbr-fonts-style display-7\">\n                                            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Excepturi, aspernatur, voluptatibus, atque, tempore molestiae.\n                                        </p>\n                                    </div>\n                                    <div className=\"card-footer\">\n                                        <div className=\"mbr-author-name mbr-bold mbr-fonts-style display-7\">\n                                            John Smith\n                                        </div>\n                                        <small className=\"mbr-author-desc mbr-italic mbr-light mbr-fonts-style display-7\">\n                                            Developer\n                                        </small>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { logoutUser } from '../../../redux/store/user/actions';\r\nimport { connect } from 'react-redux';\r\nimport { AppState } from '../../../redux/store';\r\nimport { User } from '../../../class/user';\r\ntype ToolbarProps = {\r\n    logoutUser: typeof logoutUser,\r\n    user: User\r\n}\r\ntype ToolbarStates = {\r\n}\r\nclass Toolbar extends React.Component<ToolbarProps, ToolbarStates> {\r\n    constructor(props: ToolbarProps) {\r\n        super(props);\r\n\r\n        this.logout = this.logout.bind(this);\r\n        this.renderManagementLink = this.renderManagementLink.bind(this);\r\n        this.renderProfileLink = this.renderProfileLink.bind(this);\r\n        this.renderServiceLink = this.renderServiceLink.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Handle logout action\r\n     */\r\n    logout() {\r\n        this.props.logoutUser();\r\n    }\r\n\r\n    renderProfileLink() {\r\n        let result;\r\n        if (this.props.user._id != null && this.props.user._id !== '') {\r\n            result = (\r\n                <li className=\"nav-item dropdown\">\r\n                    <a href=\"#blank-tslink\" className=\"nav-link link text-white dropdown-toggle display-4\" data-toggle=\"dropdown-submenu\" aria-expanded=\"false\">\r\n                        <span className=\"mbri-user mbr-iconfont mbr-iconfont-btn\"></span>{this.props.user.firstName} {this.props.user.lastName}\r\n                    </a>\r\n                    <div className=\"dropdown-menu\">\r\n                        <Link className=\"text-white dropdown-item display-4\" to={`/users/${this.props.user._id}`}>Profile</Link>\r\n                        <Link className=\"nav-link link text-white display-4\" to=\"/login\" onClick={this.logout}>\r\n                            Logout\r\n                        </Link>\r\n                    </div>\r\n                </li>\r\n            );\r\n        }\r\n        else {\r\n            result = (\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link link text-white display-4\" to=\"/login\">\r\n                        Login\r\n                    </Link>\r\n                </li>\r\n            );\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Handle render Management Link\r\n     */\r\n    renderManagementLink(){\r\n        let result;\r\n        if (this.props.user._id != null && this.props.user._id !== '') {\r\n            result = (\r\n                <li className=\"nav-item dropdown\">\r\n                    <a href=\"#blank-tslink\" className=\"nav-link link text-white dropdown-toggle display-4\" data-toggle=\"dropdown-submenu\" aria-expanded=\"false\">\r\n                        Management\r\n                    </a>\r\n                    <div className=\"dropdown-menu\">\r\n                        <Link className=\"text-white dropdown-item display-4\" to=\"/management/projects\">Projects</Link>\r\n                        <Link className=\"text-white dropdown-item display-4\" to=\"/management/activities\">Activities</Link>\r\n                        <Link className=\"text-white dropdown-item display-4\" to=\"/users\">Users</Link>\r\n                    </div>\r\n                </li>\r\n            );\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Handle render service link\r\n     */\r\n    renderServiceLink(){\r\n        let result;\r\n        if (this.props.user._id != null && this.props.user._id !== '') {\r\n            result = (\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link link text-white display-4\" to=\"/service\">Services</Link>\r\n                </li>\r\n            );\r\n        }\r\n        return result;\r\n    }\r\n    // After the component did mount\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        const mystyles = {\r\n            height: '3.8rem'\r\n        } as React.CSSProperties;\r\n        return (\r\n            <section className=\"menu cid-s05eVtUnGb\" id=\"menu1-7\">\r\n                <nav className=\"navbar navbar-expand beta-menu navbar-dropdown align-items-center navbar-fixed-top navbar-toggleable-sm\">\r\n                    <button className=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <div className=\"hamburger\">\r\n                            <span></span>\r\n                            <span></span>\r\n                            <span></span>\r\n                            <span></span>\r\n                        </div>\r\n                    </button>\r\n                    <div className=\"menu-logo\">\r\n                        <div className=\"navbar-brand\">\r\n                            <span className=\"navbar-logo\">\r\n                                <a href=\"/\">\r\n                                    <img src={`${process.env.PUBLIC_URL}/assets/images/mbr-122x68.jpg`} alt=\"GrownUp\" title=\"\" style={mystyles} />\r\n                                </a>\r\n                            </span>\r\n                            <span className=\"navbar-caption-wrap\">\r\n                                <a className=\"navbar-caption text-white display-4\" href=\"/\">\r\n                                    GrownUp\r\n                                </a>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav nav-dropdown\" data-app-modern-menu=\"true\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link link text-white display-4\" to=\"/\">Home</Link>\r\n                            </li>\r\n                            {\r\n                                this.renderManagementLink()\r\n                            }\r\n                            {\r\n                                this.renderServiceLink()\r\n                            }\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link link text-white display-4\" to=\"/about\">About Us</Link>\r\n                            </li>\r\n                            {\r\n                                this.renderProfileLink()\r\n                            }\r\n                        </ul>\r\n                        <div className=\"navbar-buttons mbr-section-btn\">\r\n                            <Link className=\"text-white btn btn-sm btn-primary display-4\" to=\"/contact\">Contact Us</Link>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst MapStatesToProps = (store: AppState) => {\r\n    return {\r\n        user: store.user.currentUser\r\n    }\r\n}\r\nconst MapDispatchToProps = {\r\n    logoutUser\r\n}\r\n\r\nexport default connect(MapStatesToProps, MapDispatchToProps)(Toolbar);","import { USER_LOGOUT, USER_LOGIN, STORE_USER } from \"./types\";\nimport { User } from \"../../../class/user\";\n\nexport function storeUser(users: User[]){\n  return {\n    type: STORE_USER,\n    payload: users\n  };\n}\n\nexport function loginUser(loginUser: User) {\n  return {\n    type: USER_LOGIN,\n    payload: loginUser\n  };\n}\n\nexport function logoutUser() {\n  return {\n    type: USER_LOGOUT,\n    meta: {}\n  };\n}\n","import { User } from \"../../../class/user\";\n\n// Describing the different ACTION NAMES available\nexport const USER_LOGIN = \"USER_LOGIN\";\nexport const USER_LOGOUT = \"USER_LOGOUT\";\nexport const STORE_USER = \"STORE_USER\";\n\ninterface UserLoginAction {\n  type: typeof USER_LOGIN;\n  payload: User;\n}\n\ninterface UserLogoutAction {\n  type: typeof USER_LOGOUT;\n  meta: {\n    timestamp: number;\n  };\n}\n\ninterface StoreUserAction {\n  type: typeof STORE_USER;\n  payload: User[];\n}\n\nexport type UserActionTypes = UserLoginAction | UserLogoutAction | StoreUserAction;\n","import React from 'react';\nexport class Contact extends React.Component {\n    render() {\n        const formContainer = {\n            width: '50%',\n            margin: 'auto'\n        } as React.CSSProperties;\n        return (\n            <div className=\"contact-component\">\n                <section className=\"mbr-section form4 cid-s05iX5CkzH\" id=\"form4-k\">\n                    <div className=\"container\">\n                        <div style={formContainer}>\n                            <div>\n                                <h2 className=\"pb-3 align-left mbr-fonts-style display-2\">\n                                    Drop a Line\n                                </h2>\n                                <div>\n                                    <div className=\"icon-block pb-3 align-left\">\n                                        <span className=\"icon-block__icon\">\n                                            <span className=\"mbri-letter mbr-iconfont\"></span>\n                                        </span>\n                                        <h4 className=\"icon-block__title align-left mbr-fonts-style display-5\">\n                                            Don't hesitate to contact us\n                                        </h4>\n                                    </div>\n                                    <div className=\"icon-contacts pb-3\">\n                                        <h5 className=\"align-left mbr-fonts-style display-7\">\n                                            Ready for offers and cooperation\n                                        </h5>\n                                        <p className=\"mbr-text align-left mbr-fonts-style display-7\">\n                                            Phone: +84 (0) 33 870 5850 <br />\n                                            Email: robertvo.developer.93@mail.com\n                                        </p>\n                                    </div>\n                                </div>\n                                <div data-form-type=\"formoid\">\n                                    <form action=\"https://mobirise.com/\" method=\"POST\" className=\"mbr-form form-with-styler\" data-form-title=\"Mobirise Form\">\n                                        <input type=\"hidden\" name=\"email\" data-form-email=\"true\" value=\"NHgs6oyl7goD/2aO9xww+qh9DyXQV7DlGeDDf/DT7dkPO7mgri3MdhyGoeU3Q+oRWWU12LOq8p80NGjERdbxIWvoy+fcupNDheS2fFJMm7aX6zD0pQ7swhjl+LGjC1UD\" />\n                                        <div className=\"row\">\n                                            <div hidden={true} data-form-alert=\"\" className=\"alert alert-success col-12\">\n                                                Thanks for filling out the form!\n                                            </div>\n                                            <div hidden={true} data-form-alert-danger=\"\" className=\"alert alert-danger col-12\"></div>\n                                        </div>\n                                        <div className=\"dragArea row\">\n                                            <div className=\"col-md-6  form-group\" data-for=\"name\">\n                                                <input type=\"text\" name=\"name\" placeholder=\"Your Name\" data-form-field=\"Name\" required={true} className=\"form-control input display-7\" id=\"name-form4-k\" />\n                                            </div>\n                                            <div className=\"col-md-6  form-group\" data-for=\"phone\">\n                                                <input type=\"text\" name=\"phone\" placeholder=\"Phone\" data-form-field=\"Phone\" required={true} className=\"form-control input display-7\" id=\"phone-form4-k\" />\n                                            </div>\n                                            <div data-for=\"email\" className=\"col-md-12  form-group\">\n                                                <input type=\"text\" name=\"email\" placeholder=\"Email\" data-form-field=\"Email\" className=\"form-control input display-7\" required={true} id=\"email-form4-k\" />\n                                            </div>\n                                            <div data-for=\"message\" className=\"col-md-12  form-group\">\n                                                <textarea name=\"message\" placeholder=\"Message\" data-form-field=\"Message\" className=\"form-control input display-7\" id=\"message-form4-k\"></textarea>\n                                            </div>\n                                            <div className=\"col-md-12 input-group-btn  mt-2 align-center\">\n                                                <button type=\"submit\" className=\"btn btn-primary btn-form display-4\">SEND MESSAGE</button>\n                                            </div>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}","export interface SignUpProp {\n\tOnRegister: (form:SignUpState) => void,\n\tLoginRedirectLink: string\n}\n\nexport type SignUpState = {\n\tfirstName: string,\n\tlastName: string,\n\temail: string,\n\tpassword: string,\n\trepassword: string,\n\taddress: string,\n\tphone: string,\n\tredirectLoginPage: boolean,\n\tdisableSubmitButton: boolean,\n\terrors: any,\n\tmandatoryFields: any\n}\n\nexport const initialSignUpState: SignUpState = {\n\tfirstName: '',\n\tlastName: '',\n\temail: '',\n\tpassword: '',\n\trepassword: '',\n\taddress: '',\n\tphone: '',\n\tredirectLoginPage: false,\n\tdisableSubmitButton: true,\n\terrors: {\n\t\tfirstName: 'First Name is required',\n\t\tlastName: 'Last Name is required',\n\t\temail: 'Email is required',\n\t\tpassword: 'Password is required',\n\t\trepassword: 'Re-Password is required'\n\t},\n\tmandatoryFields: {\n\t\tfirstName: true,\n\t\tlastName: true,\n\t\temail: true,\n\t\tpassword: true,\n\t\trepassword: true,\n\t}\n}","//style Bootstrap\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { SignUpProp, SignUpState, initialSignUpState } from \"./SignUpPropsStates\";\nimport { Redirect } from \"react-router-dom\";\n\nconst Container = styled.div`\n    background-color: #232323;\n    padding-top: 30px;\n    padding-bottom: 20px;\n`;\nconst LoginDiv = styled.div`\n    width: 400px;\n    margin: auto;\n    background-color: #e9ecef;\n    padding: 40px;\n    border-radius: 15px;\n`;\nconst CustomTextBox: React.CSSProperties = {\n    display: 'block',\n    width: '100%',\n    borderRadius: '.25rem',\n    backgroundColor: '#f5f5f5',\n    boxShadow: 'none',\n    color: '#565656',\n    lineHeight: 1.43,\n    padding: '1.07em 0.5em',\n    height: 'calc(2.25rem + 2px)',\n    border: '1px solid #e8e8e8'\n}\nconst Margin0: React.CSSProperties = {\n    margin: 0\n};\nconst TextCenter: React.CSSProperties = {\n    textAlign: 'center'\n};\nconst DangerText: React.CSSProperties = {\n    color: 'red',\n    fontStyle: 'italic'\n};\nconst LinkA = styled.a`\n    color: #149dcc !important;\n`;\nexport default class SignUp extends Component<SignUpProp, SignUpState> {\n    constructor(props: SignUpProp) {\n        super(props);\n\n        //initial variable\n        this.state = initialSignUpState;\n\n        //binding functions\n        this.handleChange = this.handleChange.bind(this);\n        this.validateForm = this.validateForm.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.renderErrorMessage = this.renderErrorMessage.bind(this);\n    }\n\n    /**\n     * handle change value of form\n     * @param event Change event\n     */\n    handleChange(event: any) {\n        event.preventDefault();\n        const { name, value } = event.target;\n        this.setState<never>({\n            [name]: value\n        }, () => {\n            let { errors, valid } = this.validateForm();\n            let disabled = !valid;\n            this.setState({\n                disableSubmitButton: disabled,\n                errors\n            });\n        });\n    }\n\n    /**\n     * Validate the sign up form\n     */\n    validateForm() {\n        let valid = true;\n        let errors: { [s: string]: string } = {};\n        errors['firstName'] = this.state.firstName.length > 0 ? \"\" : \"First Name is required\";\n        errors['lastName'] = this.state.lastName.length > 0 ? \"\" : \"Last Name is required\";\n        errors['email'] = this.state.email.length > 0 ? \"\" : \"Email is required\";\n        errors['password'] = this.state.password.length > 0 ? \"\" : \"Password is required\";\n        errors['repassword'] = this.state.repassword.length > 0 ? \"\" : \"Re-Password is required\";\n        if(this.state.repassword  !== \"\" && this.state.password !== this.state.repassword){\n            errors.repassword = \"Password and Re-Password are not match\";\n        }\n\n        for (var key in errors) {\n            if (errors[key].length > 0) {\n                valid = false;\n                break;\n            }\n        }\n        return { errors, valid };\n    }\n\n    /**\n     * Render error message base on question key\n     * @param questionKey question key\n     */\n    renderErrorMessage(questionKey: string) {\n        //get state.error message base on question key\n        let errors = this.state.errors[questionKey];\n        //if there is no error => return\n        if (!errors || errors === \"\") return;\n        //else display error message\n        return (\n            <div style={DangerText}>\n                {\n                    <div key={questionKey}>\n                        <span>{errors}</span>\n                    </div>\n                }\n            </div>\n        );\n    }\n\n    /**\n     * Handle redirect to login page\n     */\n    handleLogin() {\n        this.setState({\n            redirectLoginPage: true\n        });\n    }\n\n    render() {\n        if (this.state.redirectLoginPage) {\n            return <Redirect push={true} to={this.props.LoginRedirectLink} />\n        }\n        return (\n            <Container>\n                <LoginDiv>\n                    <form onSubmit={(e) => { e.preventDefault(); this.props.OnRegister(this.state) }}>\n                        <h3 style={TextCenter}>Sign Up</h3>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"firstName\">\n                                <span style={DangerText}>* </span><span data-text=\"First name\">First name</span>\n                            </label>\n                            <input name=\"firstName\"\n                                type=\"text\"\n                                onChange={this.handleChange}\n                                style={CustomTextBox}\n                                placeholder=\"First name\" />\n                            {this.renderErrorMessage('firstName')}\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"lastName\">\n                                <span style={DangerText}>* </span><span data-text=\"Last name\">Last name</span>\n                            </label>\n                            <input name=\"lastName\"\n                                type=\"text\"\n                                onChange={this.handleChange}\n                                style={CustomTextBox}\n                                placeholder=\"Last name\" />\n                            {this.renderErrorMessage('lastName')}\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email\">\n                                <span style={DangerText}>* </span><span data-text=\"Email address\">Email address</span>\n                            </label>\n                            <input name=\"email\"\n                                type=\"email\"\n                                onChange={this.handleChange}\n                                style={CustomTextBox}\n                                placeholder=\"Enter email\" />\n                            {this.renderErrorMessage('email')}\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\">\n                                <span style={DangerText}>* </span><span data-text=\"Password\">Password</span>\n                            </label>\n                            <input name=\"password\"\n                                type=\"password\"\n                                onChange={this.handleChange}\n                                style={CustomTextBox}\n                                placeholder=\"Enter password\" />\n                            {this.renderErrorMessage('password')}\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"repassword\">\n                                <span style={DangerText}>* </span><span data-text=\"Re-Password\">Re-Password</span>\n                            </label>\n                            <input name=\"repassword\"\n                                type=\"password\"\n                                onChange={this.handleChange}\n                                style={CustomTextBox}\n                                placeholder=\"Re-Enter password\" />\n                            {this.renderErrorMessage('repassword')}\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"address\">\n                                <span style={DangerText}>* </span><span data-text=\"Address\">Address</span>\n                            </label>\n                            <input name=\"address\"\n                                type=\"text\"\n                                onChange={this.handleChange}\n                                style={CustomTextBox}\n                                placeholder=\"Enter address\" />\n                            {this.renderErrorMessage('address')}\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"phone\">\n                                <span style={DangerText}>* </span><span data-text=\"Phone\">Phone</span>\n                            </label>\n                            <input name=\"phone\"\n                                type=\"text\"\n                                onChange={this.handleChange}\n                                style={CustomTextBox}\n                                placeholder=\"Enter phone Number\" />\n                            {this.renderErrorMessage('phone')}\n                        </div>\n\n                        <button style={Margin0}\n                            disabled={this.state.disableSubmitButton}\n                            type=\"submit\"\n                            className=\"btn btn-primary btn-block\">\n                            Sign Up\n                        </button>\n                        <p className=\"forgot-password text-right\">\n                            Already registered <LinkA onClick={this.handleLogin}>Login?</LinkA>\n                        </p>\n                    </form>\n                </LoginDiv>\n            </Container>\n        );\n    }\n}","import { KeyValue } from \"../class/common/keyValue\"\n\nexport class Config {\n    apiServiceURL = {\n        server: `${process.env.REACT_APP_SERVER_URL}`,\n        serverAPI: `${process.env.REACT_APP_SERVER_URL}/api`,\n        users: `${process.env.REACT_APP_SERVER_URL}/api/users`,\n        login: `${process.env.REACT_APP_SERVER_URL}/api/login`,\n        register:`${process.env.REACT_APP_SERVER_URL}/api/register`,\n        todo: `${process.env.REACT_APP_SERVER_URL}/api/todos`,\n        activities: `${process.env.REACT_APP_SERVER_URL}/api/activities`,\n    }\n\n    commonMessage = {\n        loginError: 'Login error!!!',\n        userNotFound: 'User not found!!!',\n        signUpError: 'Register error!!!'\n    }\n\n    alertVariants = {\n        primary :'primary',\n        secondar :'secondary',\n        success :'success',\n        danger :'danger',\n        warning :'warning',\n        info :'info',\n        light :'light',\n        dark :'dark'\n    }\n\n    activityStatus:any = {\n        'open': new KeyValue({key: 1, value: 'Open'}),\n        'inProgress': new KeyValue({key: 2, value: 'In Progress'}),\n        'completed': new KeyValue({key: 3, value: 'Completed'}),\n        'onPending': new KeyValue({key: 4, value: 'Pending'}),\n        'closed': new KeyValue({key: 5, value: 'Closed'}),\n        'cancelled': new KeyValue({key: 6, value: 'Cancelled'})\n    }\n\n    defaultDropDownOptions = {\n        all: new KeyValue({key: -1, value: '--All--'}),\n        none: new KeyValue({key: 0, value: '--None--'})\n    }\n\n    datetimeFormat = {\n        yyyyMMdd: 'yyyy/MM/dd',\n        ddMMyyyy: 'dd/mm/yyyy'\n    }\n\n    localStorageKey = {\n        appState: \"application_state\"\n    }\n}","import { AxiosError, AxiosRequestConfig, AxiosResponse } from \"axios\";\nimport { Credentials } from \"../../../interface/Credentials\";\nimport { User } from \"../../../class/user\";\nimport { Config } from \"../../../configuration/config\";\nimport { JwtResponse } from \"../../../class/common/response-data\";\nimport { commonAPI } from \"../../../service/common-api.service\";\n\n/**\n * Example class\n *\n * @export\n * @class UserServiceApi\n * @extends {Api}\n *\n * @example\n * const axiosConfig = {\n *  baseUrl: \"www.domain.com\"\n * }\n * const api = new UserServiceApi(axiosConfig);\n *  */\nexport class UserServiceApi {\n    config: Config;\n    axiosConfig: AxiosRequestConfig;\n    constructor(configs: AxiosRequestConfig) {\n        // // this middleware is been called right before the http request is made.\n        // this.interceptors.request.use((param: AxiosRequestConfig) => ({\n        //     ...param\n        // }));\n\n        // // this middleware is been called right before the response is get it by the method that triggers the request\n        // this.interceptors.response.use((param: AxiosResponse) => ({\n        //     ...param\n        // }));\n\n        this.userLogin = this.userLogin.bind(this);\n        this.userRegister = this.userRegister.bind(this);\n        this.getAllUsers = this.getAllUsers.bind(this);\n        this.getById = this.getById.bind(this);\n        this.config = new Config();\n        this.axiosConfig = configs;\n    }\n\n    public userLogin(credentials: Credentials): Promise<JwtResponse> {\n        return commonAPI.post<string, Credentials, AxiosResponse<JwtResponse>>(this.config.apiServiceURL.login, credentials)\n            .then((res)=>{\n                //TODO: handle auth\n                localStorage.setItem(\"CURRENT_USER\", JSON.stringify(res));\n                return commonAPI.success(res);\n            });\n    }\n\n    public userRegister(user: User): Promise<JwtResponse> {\n        return commonAPI.post<number, User, AxiosResponse<JwtResponse>>(this.config.apiServiceURL.register, user)\n            .then((res)=>{\n                //TODO: handle auth\n                localStorage.setItem(\"CURRENT_USER\", JSON.stringify(res));\n                return commonAPI.success(res);\n            })\n            .catch((error: AxiosError<Error>) => {\n                throw error;\n            });\n    }\n\n    public updateUser(user: User): Promise<JwtResponse> {\n        return commonAPI.put<number, User, AxiosResponse<JwtResponse>>(this.config.apiServiceURL.users, user)\n            .then((res)=>{\n                return commonAPI.success(res);\n            })\n            .catch((error: AxiosError<Error>) => {\n                throw error;\n            });\n    }\n\n    public async deleteRecords(objs: User[]) : Promise<any> {\n        try{\n            this.axiosConfig.data = objs;\n            const res = await commonAPI.delete(`${this.config.apiServiceURL.activities}`, this.axiosConfig);\n            return commonAPI.success(res);\n        }\n        catch(e) {\n            throw e;\n        }\n    }\n\n    public async getAllUsers(): Promise<User[]> {\n        try {\n            const res: AxiosResponse<User[]> = await commonAPI.get<User, AxiosResponse<User[]>>(this.config.apiServiceURL.users);\n            return commonAPI.success(res);\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    public getById(id: number): Promise<User> {\n        return commonAPI.get<User, AxiosResponse<User>>(`${this.config.apiServiceURL.users}/${id}`).then(commonAPI.success);\n    }\n}\n","export class User {\n    constructor(obj?: any){\n        this._id        = (obj && obj._id)?         obj._id : null;\n        this.userId     = (obj && obj.userId)?      obj.userId : '';\n        this.email      = (obj && obj.email)?       obj.email : '';\n        this.password   = (obj && obj.password)?    obj.password : '';\n        this.firstName  = (obj && obj.firstName)?   obj.firstName : '';\n        this.lastName   = (obj && obj.lastName)?    obj.lastName : '';\n        this.phone      = (obj && obj.phone)?       obj.phone : '';\n        this.address    = (obj && obj.address)?     obj.address : '';\n        this.token      = (obj && obj.token)?       obj.token : '';\n    }\n    _id: any;\n    userId: string;\n    email: string;\n    password: string;\n    firstName: string;\n    lastName: string;\n    phone: string;\n    address: string;\n    token: string\n}","import React from 'react';\nimport Alert, { AlertProps } from 'react-bootstrap/Alert';\nimport styled from 'styled-components';\nimport './Alert.scss';\nconst ContainerDiv = styled.div`\n    position: fixed;\n    top: -20px;\n    width: 100%;\n    z-index: 1000000;\n    padding: 30px;\n`;\nconst CloseButton = styled.div`\n    float: right;\n    margin-top: -18px;\n    cursor: pointer;\n    margin-right: -10px;\n`;\nconst AlertStyle: React.CSSProperties = {\n    borderRadius: '.25rem'\n};\ntype AlertStates = {\n    show?: boolean\n}\nexport class AlertDiv extends React.Component<AlertProps, AlertStates> {\n    constructor(props:AlertProps){\n        super(props);\n        this.state = {\n            show: this.props.show\n        }\n\n        this.setShow = this.setShow.bind(this);\n    }\n    setShow(flag: boolean){\n        this.setState({\n            show: flag\n        });\n    }\n    handleOnCloseButton(){\n        return this.props.onClose? this.props.onClose() : null;\n    }\n    render(){\n\n        return(\n            <ContainerDiv>\n                {this.state.show ? (\n                    <Alert style={AlertStyle}\n                        key={this.props.key} \n                        variant={this.props.variant}>\n                        <CloseButton onClick={()=> this.handleOnCloseButton()}>\n                            <strong>x</strong>\n                        </CloseButton>\n                        {this.props.value}\n                    </Alert>\n                ) : ''\n                }\n            </ContainerDiv>\n        );\n    }\n}","import { User } from \"../../../class/user\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\nexport interface UserProps extends RouteComponentProps<any>{\n\n}\n\nexport interface UserStates {\n    user: User;\n}\n\nexport const initialUserState : UserStates = {\n    user: new User()\n}","import React from 'react';\nimport { withRouter } from \"react-router\";\nimport { UserServiceApi } from './User.service';\nimport * as apiConfig from '../../../configuration/api.config';\nimport { User } from '../../../class/user';\nimport { UserProps, UserStates, initialUserState } from './UserPropsStates';\nimport styled from 'styled-components';\nimport { \n    DynamicForm, FormConfig, Validator, QuestionBase, TextboxQuestion, DynamicFormStates \n} from '../../../share-components/DynamicForm';\n\nconst ContainerDiv = styled.div`\n    width: 80%;\n    margin: auto;\n    padding-top: 50px;\n    padding-bottom: 100px;\n`;\n\nclass UserComponent extends React.Component<UserProps, UserStates> {\n    userService: UserServiceApi;\n    formConfig: FormConfig;\n    constructor(props: UserProps) {\n        super(props);\n\n        this.state = initialUserState;\n        this.userService = new UserServiceApi(apiConfig.apiConfig);\n        this.formConfig = new FormConfig();\n\n        this.getQuestion = this.getQuestion.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n        let user = await this.userService.getById(this.props.match.params['userId']);\n        this.setState({\n            user: user\n        });\n    }\n    \n    handleSubmit(form: DynamicFormStates) {\n        let user = new User(form.listFields);\n        console.log(user);\n        this.userService.updateUser(user).then((result)=>{\n            console.log(result);\n        })\n        .catch((err)=>{\n            console.log(err);\n        })\n    }\n\n    getQuestion(user: User) {\n        let questions: QuestionBase<string>[] = [];\n        let validators: { [s: string]: Validator<any>; } = {};\n\n        //Add last name text\n        questions.push(new TextboxQuestion({\n            key: 'email',\n            label: 'Email',\n            value: user.email,\n            type: this.formConfig.inputTypeDef.email,\n            readonly: true,\n            order: 10\n        }));\n        \n        //Add first name text\n        validators[this.formConfig.formValidators.require] = {\n            value: true,\n            errorMessage: 'First name is required.'\n        };\n        questions.push(new TextboxQuestion({\n            key: 'firstName',\n            label: 'First name',\n            value: user.firstName,\n            validators: validators,\n            type: this.formConfig.inputTypeDef.text,\n            order: 20\n        }));\n\n        //Add last name text\n        validators = {};\n        validators[this.formConfig.formValidators.require] = {\n            value: true,\n            errorMessage: 'Last name is required.'\n        };\n        questions.push(new TextboxQuestion({\n            key: 'lastName',\n            label: 'Last name',\n            value: user.lastName,\n            validators: validators,\n            type: this.formConfig.inputTypeDef.text,\n            order: 30\n        }));\n\n        //Add last name text\n        questions.push(new TextboxQuestion({\n            key: 'address',\n            label: 'Address',\n            value: user.address,\n            type: this.formConfig.inputTypeDef.text,\n            order: 40\n        }));\n\n        //Add last name text\n        questions.push(new TextboxQuestion({\n            key: 'phone',\n            label: 'Phone',\n            value: user.phone,\n            type: this.formConfig.inputTypeDef.text,\n            order: 50\n        }));\n        return questions;\n    }\n\n    render() {\n        let questions = this.getQuestion(this.state.user);\n        return (\n            <ContainerDiv>\n                <DynamicForm ListFields={questions} OnSubmitCallback={this.handleSubmit} />\n            </ContainerDiv>\n        );\n    }\n}\n\nexport default withRouter(UserComponent);","import React from 'react';\n// A great library for fuzzy filtering/sorting items\nimport matchSorter from 'match-sorter';\n\n// Define a default UI for filtering\nexport function DefaultColumnFilter({\n    column: { filterValue, preFilteredRows, setFilter },\n}) {\n    const count = preFilteredRows.length\n\n    return (\n        <input\n            value={filterValue || ''}\n            onClick={e=> e.stopPropagation()}\n            onChange={e => {\n                setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\n            }}\n            placeholder={`Search ${count} records...`}\n        />\n    )\n}\n\n// This is a custom filter UI for selecting\n// a unique option from a list\nexport function SelectColumnFilter({\n    column: { filterValue, setFilter, preFilteredRows, id },\n}) {\n    // Calculate the options for filtering\n    // using the preFilteredRows\n    const options = React.useMemo(() => {\n        const options = new Set()\n        preFilteredRows.forEach(row => {\n            options.add(row.values[id])\n        })\n        return [...options.values()]\n    }, [id, preFilteredRows])\n\n    // Render a multi-select box\n    return (\n        <select\n            value={filterValue}\n            onClick={e=> e.stopPropagation()}\n            onChange={e => {\n                setFilter(e.target.value || undefined)\n            }}\n        >\n            <option value=\"\">All</option>\n            {options.map((option, i) => (\n                <option key={i} value={option}>\n                    {option}\n                </option>\n            ))}\n        </select>\n    )\n}\n\n// This is a custom filter UI that uses a\n// slider to set the filter value between a column's\n// min and max values\nexport function SliderColumnFilter({\n    column: { filterValue, setFilter, preFilteredRows, id },\n}) {\n    // Calculate the min and max\n    // using the preFilteredRows\n\n    const [min, max] = React.useMemo(() => {\n        let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n        let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n        preFilteredRows.forEach(row => {\n            min = Math.min(row.values[id], min)\n            max = Math.max(row.values[id], max)\n        })\n        return [min, max]\n    }, [id, preFilteredRows])\n\n    return (\n        <>\n            <input\n                type=\"range\"\n                min={min}\n                max={max}\n                value={filterValue || min}\n                onChange={e => {\n                    setFilter(parseInt(e.target.value, 10))\n                }}\n            />\n            <button onClick={() => setFilter(undefined)}>Off</button>\n        </>\n    )\n}\n\n// This is a custom UI for our 'between' or number range\n// filter. It uses two number boxes and filters rows to\n// ones that have values between the two\nexport function NumberRangeColumnFilter({\n    column: { filterValue = [], preFilteredRows, setFilter, id },\n}) {\n    const [min, max] = React.useMemo(() => {\n        let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n        let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n        preFilteredRows.forEach(row => {\n            min = Math.min(row.values[id], min)\n            max = Math.max(row.values[id], max)\n        })\n        return [min, max]\n    }, [id, preFilteredRows])\n\n    return (\n        <div\n            style={{\n                display: 'flex',\n            }}\n        >\n            <input\n                value={filterValue[0] || ''}\n                type=\"number\"\n                onChange={e => {\n                    const val = e.target.value\n                    setFilter((old = []) => [val ? parseInt(val, 10) : undefined, old[1]])\n                }}\n                placeholder={`Min (${min})`}\n                style={{\n                    width: '70px',\n                    marginRight: '0.5rem',\n                }}\n            />\n      to\n            <input\n                value={filterValue[1] || ''}\n                type=\"number\"\n                onChange={e => {\n                    const val = e.target.value\n                    setFilter((old = []) => [old[0], val ? parseInt(val, 10) : undefined])\n                }}\n                placeholder={`Max (${max})`}\n                style={{\n                    width: '70px',\n                    marginLeft: '0.5rem',\n                }}\n            />\n        </div>\n    )\n}\n\nexport function fuzzyTextFilterFn(rows, id, filterValue) {\n    return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\n}\n\n// Let the table remove the filter if the string is empty\nfuzzyTextFilterFn.autoRemove = val => !val\n\n// Define a custom filter filter function!\nexport function filterGreaterThan(rows, id, filterValue) {\n    return rows.filter(row => {\n        const rowValue = row.values[id]\n        return rowValue >= filterValue\n    })\n}\n\n// This is an autoRemove method on the filter function that\n// when given the new filter value and returns true, the filter\n// will be automatically removed. Normally this is just an undefined\n// check, but here, we want to remove the filter if it's not a number\nfilterGreaterThan.autoRemove = val => typeof val !== 'number';","import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox'\n//Add selection\nexport const IndeterminateCheckbox = React.forwardRef(\n    ({ indeterminate, ...rest }, ref) => {\n        const defaultRef = React.useRef();\n        const resolvedRef = ref || defaultRef;\n\n        React.useEffect(() => {\n            resolvedRef.current.indeterminate = indeterminate;\n        }, [resolvedRef, indeterminate]);\n\n        return (\n            <>\n                <Checkbox type=\"checkbox\" ref={resolvedRef} {...rest} />\n            </>\n        );\n    }\n);","import React from 'react'\n\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\nimport IconButton from '@material-ui/core/IconButton'\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport LastPageIcon from '@material-ui/icons/LastPage'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}))\n\nconst TablePaginationActions = props => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const { count, page, rowsPerPage, onChangePage } = props\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0)\n  }\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1)\n  }\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1)\n  }\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1))\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  )\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n}\n\nexport default TablePaginationActions\n","import React from 'react'\n\nimport InputBase from '@material-ui/core/InputBase'\nimport { fade, makeStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport SearchIcon from '@material-ui/icons/Search'\n\nconst useStyles = makeStyles(theme => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: 200,\n    },\n  },\n}))\n\nconst GlobalFilter = ({\n  preGlobalFilteredRows,\n  globalFilter = '',\n  setGlobalFilter,\n}) => {\n  const classes = useStyles()\n  const count = preGlobalFilteredRows.length\n\n  // Global filter only works with pagination from the first page.\n  // This may not be a problem for server side pagination when\n  // only the current page is downloaded.\n\n  return (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        <SearchIcon />\n      </div>\n      <InputBase\n        value={globalFilter || ''}\n        onChange={e => {\n          setGlobalFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\n        }}\n        placeholder={`${count} records...`}\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput,\n        }}\n        inputProps={{ 'aria-label': 'search' }}\n      />\n    </div>\n  )\n}\n\nGlobalFilter.propTypes = {\n  preGlobalFilteredRows: PropTypes.array.isRequired,\n  setGlobalFilter: PropTypes.func.isRequired,\n}\n\nexport default GlobalFilter\n","import React from 'react'\n\nimport clsx from 'clsx'\nimport {\n\tSelect, IconButton, Toolbar, Typography,\n\tTooltip, FormControl, InputLabel, Input, MenuItem,\n\tCheckbox, ListItemText\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types'\nimport GlobalFilter from '../Filter/GlobalFilter';\n\nconst useToolbarStyles = makeStyles(theme => ({\n\tformControl: {\n\t\tmargin: theme.spacing(1),\n\t\tminWidth: 120,\n\t\tmaxWidth: 300,\n\t},\n\troot: {\n\t\tpaddingLeft: theme.spacing(2),\n\t\tpaddingRight: theme.spacing(1),\n\t},\n\thighlight:\n\t\ttheme.palette.type === 'light'\n\t\t\t? {\n\t\t\t\tcolor: theme.palette.secondary.main,\n\t\t\t\tbackgroundColor: lighten(theme.palette.secondary.light, 0.85),\n\t\t\t}\n\t\t\t: {\n\t\t\t\tcolor: theme.palette.text.primary,\n\t\t\t\tbackgroundColor: theme.palette.secondary.dark,\n\t\t\t},\n\ttitle: {\n\t\tflex: '1 1 100%',\n\t},\n}))\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n\tPaperProps: {\n\t\tstyle: {\n\t\t\tmaxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n\t\t\twidth: 250,\n\t\t},\n\t},\n};\n\nconst TableToolbar = props => {\n\tconst classes = useToolbarStyles()\n\tconst {\n\t\tnumSelected,\n\t\tdeleteRecordHandler,\n\t\taddRecordHandler,\n\t\tpreGlobalFilteredRows,\n\t\tsetGlobalFilter,\n\t\tglobalFilter = '',\n\t\tTableName = '',\n\t\tallColumns,\n\t} = props\n\treturn (\n\t\t<Toolbar\n\t\t\tclassName={clsx(classes.root, {\n\t\t\t\t[classes.highlight]: numSelected > 0,\n\t\t\t})}\n\t\t>\n\t\t\t{\n\t\t\t\taddRecordHandler.toString() !== \"() => {}\" ?\n\t\t\t\t\t(\n\t\t\t\t\t\t<Tooltip title=\"Add\">\n\t\t\t\t\t\t\t<IconButton aria-label=\"add\" onClick={addRecordHandler}>\n\t\t\t\t\t\t\t\t<AddIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t)\n\t\t\t}\n\n\t\t\t{numSelected > 0 ? (\n\t\t\t\t<Typography\n\t\t\t\t\tclassName={classes.title}\n\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\tvariant=\"subtitle1\"\n\t\t\t\t>\n\t\t\t\t\t{numSelected} selected\n\t\t\t\t</Typography>\n\t\t\t) : (\n\t\t\t\t\t<Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tTableName\n\t\t\t\t\t\t}\n\t\t\t\t\t</Typography>\n\t\t\t\t)}\n\n\t\t\t{numSelected > 0 ? (\n\t\t\t\t<Tooltip title=\"Delete\">\n\t\t\t\t\t<IconButton aria-label=\"delete\" onClick={deleteRecordHandler}>\n\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Tooltip>\n\t\t\t) : (\n\t\t\t\t\t<GlobalFilter\n\t\t\t\t\t\tpreGlobalFilteredRows={preGlobalFilteredRows}\n\t\t\t\t\t\tglobalFilter={globalFilter}\n\t\t\t\t\t\tsetGlobalFilter={setGlobalFilter}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\n\t\t\t<FormControl className={classes.formControl}>\n\t\t\t\t<InputLabel id=\"columns-visible-label\">Columns</InputLabel>\n\t\t\t\t<Select\n\t\t\t\t\tlabelId=\"columns-visible-label\"\n\t\t\t\t\tid=\"columns-visible-select\"\n\t\t\t\t\tmultiple\n\t\t\t\t\tvalue={[\"Select columns\"]}\n\t\t\t\t\tinput={<Input />}\n\t\t\t\t\trenderValue={(selected) => selected.join(', ')}\n\t\t\t\t\tMenuProps={MenuProps}\n\t\t\t\t>\n\t\t\t\t\t{allColumns.map(column => (\n\t\t\t\t\t\t<MenuItem key={column.id} value={column.id}>\n\t\t\t\t\t\t\t<Checkbox {...column.getToggleHiddenProps()} />\n\t\t\t\t\t\t\t<ListItemText primary={column.id} />\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t))}\n\t\t\t\t</Select>\n\t\t\t</FormControl>\n\t\t</Toolbar>\n\t)\n}\n\nTableToolbar.propTypes = {\n\tnumSelected: PropTypes.number.isRequired,\n\taddRecordHandler: PropTypes.func.isRequired,\n\tdeleteRecordHandler: PropTypes.func.isRequired,\n\tsetGlobalFilter: PropTypes.func.isRequired,\n\tpreGlobalFilteredRows: PropTypes.array.isRequired,\n\tallColumns: PropTypes.array.isRequired\n}\n\nexport default TableToolbar\n","import React from 'react';\nimport {\n    useTable,\n    usePagination,\n    useFilters,\n    useGlobalFilter,\n    useRowSelect,\n    useSortBy\n} from \"react-table\";\nimport * as filter from './Filter/Filter';\nimport { IndeterminateCheckbox } from './Selection/RowSelection';\nimport PropTypes from 'prop-types';\nimport { TableContainer, TableHead, TableRow, TableCell, TableBody, TableFooter, TablePagination, TableSortLabel } from '@material-ui/core';\nimport MaUTable from '@material-ui/core/Table'\nimport TablePaginationActions from './Pagination/TablePaginationActions';\nimport TableToolbar from './Toolbar/TableToolbar';\nimport './Table.scss';\n\n// Our table component\nexport function Table({\n    columns,\n    data,\n    fetchData,\n    pageCount: controlledPageCount,\n    skipPageReset = true,\n    deleteRecordHandler = (selectedId) => { },\n    addRecordHandler = () => { },\n    TableName = ''\n}) {\n    const filterTypes = React.useMemo(\n        () => ({\n            // Add a new fuzzyTextFilterFn filter type.\n            fuzzyText: filter.fuzzyTextFilterFn,\n            // Or, override the default text filter to use\n            // \"startWith\"\n            text: (rows, id, filterValue) => {\n                return rows.filter(row => {\n                    const rowValue = row.values[id]\n                    return rowValue !== undefined\n                        ? String(rowValue)\n                            .toLowerCase()\n                            .startsWith(String(filterValue).toLowerCase())\n                        : true\n                })\n            },\n        }),\n        []\n    )\n\n    const defaultColumn = React.useMemo(\n        () => ({\n            // Let's set up our default Filter UI\n            Filter: filter.DefaultColumnFilter,\n        }),\n        []\n    )\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        page,\n        gotoPage,\n        setPageSize,\n        allColumns,\n        preGlobalFilteredRows,\n        setGlobalFilter,\n        state: { pageIndex, pageSize, selectedRowIds, globalFilter },\n    } = useTable(\n        {\n            columns,\n            data,\n            defaultColumn, // Be sure to pass the defaultColumn option\n            filterTypes,\n            autoResetPage: !skipPageReset,  //reset page after change (filter)\n            pageCount: controlledPageCount,\n            manualPagination: true, // Tell the usePagination\n        },\n        useGlobalFilter,\n        useFilters,\n        useSortBy,\n        usePagination,\n        useRowSelect,\n        hooks => {\n            hooks.allColumns.push(columns => [\n                // Let's make a column for selection\n                {\n                    id: \"selection\",\n                    // The header can use the table's getToggleAllRowsSelectedProps method\n                    // to render a checkbox\n                    Header: ({ getToggleAllRowsSelectedProps }) => (\n                        <div style={{ textAlign: \"center\" }}>\n                            <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n                        </div>\n                    ),\n                    // The cell can use the individual row's getToggleRowSelectedProps method\n                    // to the render a checkbox\n                    Cell: ({ row }) => (\n                        <div style={{ textAlign: \"center\" }}>\n                            <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n                        </div>\n                    )\n                },\n                ...columns\n            ]);\n        }\n    )\n\n    // Listen for changes in pagination and use the state to fetch our new data\n    React.useEffect(() => {\n        fetchData({ pageIndex, pageSize })\n    }, [fetchData, pageIndex, pageSize])\n\n    //Change row per page in pagination\n    const handleChangeRowsPerPage = event => {\n        setPageSize(Number(event.target.value))\n    }\n    //Change the selected page\n    const handleChangePage = (event, newPage) => {\n        gotoPage(newPage)\n    }\n    //pre-do to get selected record\n    const preDeleteRecordHandler = () => {\n        //get index of selected record\n        let selectedRowIndex = Object.keys(selectedRowIds).map(x => parseInt(x, 10));\n        //filter record\n        let selectedRecord = data.filter((_, i) => {\n            return selectedRowIndex.includes(i)\n        });\n        //send the record to handle page\n        deleteRecordHandler(selectedRecord);\n    }\n\n    return (\n        <TableContainer className=\"ReactTable\">\n            <TableToolbar\n                numSelected={Object.keys(selectedRowIds).length}\n                deleteRecordHandler={preDeleteRecordHandler}\n                addRecordHandler={addRecordHandler}\n                TableName={TableName}\n                preGlobalFilteredRows={preGlobalFilteredRows}\n                setGlobalFilter={setGlobalFilter}\n                globalFilter={globalFilter}\n                allColumns={allColumns}\n            />\n            <MaUTable {...getTableProps()} className=\"react-custom-table\">\n                <TableHead>\n                    {headerGroups.map(headerGroup => (\n                        <TableRow {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map(column => (\n                                <TableCell\n                                    {...(column.id === 'selection'\n                                        ? column.getHeaderProps()\n                                        : column.getHeaderProps(column.getSortByToggleProps()))}\n                                >\n                                    {column.render('Header')}\n                                    {column.id !== 'selection' ? (\n                                        <TableSortLabel\n                                            active={column.isSorted}\n                                            // react-table has a unsorted state which is not treated here\n                                            direction={column.isSortedDesc ? 'desc' : 'asc'}\n                                        />\n                                    ) : null}\n                                    <div className=\"table-header-filter\">\n                                        {(column.canFilter && !column.columnDisableGlobalFilter) ? column.render('Filter') : null}\n                                    </div>\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    ))}\n                </TableHead>\n                <TableBody {...getTableBodyProps()}>\n                    {page.map((row, i) => {\n                        prepareRow(row)\n                        return (\n                            <TableRow {...row.getRowProps()}>\n                                {row.cells.map(cell => {\n                                    return (\n                                        <TableCell {...cell.getCellProps()}>\n                                            {cell.render('Cell')}\n                                        </TableCell>\n                                    )\n                                })}\n                            </TableRow>\n                        )\n                    })}\n                </TableBody>\n                <TableFooter className=\"pagination\">\n                    <TableRow>\n                        <TablePagination\n                            rowsPerPageOptions={[\n                                5,\n                                10,\n                                25,\n                                50,\n                                100,\n                                { label: 'All', value: controlledPageCount },\n                            ]}\n                            colSpan={10000}\n                            count={controlledPageCount}\n                            rowsPerPage={pageSize}\n                            page={pageIndex}\n                            SelectProps={{\n                                inputProps: { 'aria-label': 'rows per page' },\n                                native: true,\n                            }}\n                            onChangePage={handleChangePage}\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\n                            ActionsComponent={TablePaginationActions}\n                        />\n                    </TableRow>\n                </TableFooter>\n            </MaUTable>\n        </TableContainer>\n    )\n}\n\nTable.propTypes = {\n    columns: PropTypes.array.isRequired,\n    data: PropTypes.array.isRequired,\n    fetchData: PropTypes.func.isRequired,\n    pageCount: PropTypes.number.isRequired,\n    deleteRecordHandler: PropTypes.func.isRequired\n}","import React, { Component } from 'react';\r\nimport './UserContainer.scss';\r\nimport { User } from '../../../class/user';\r\nimport { connect } from 'react-redux';\r\nimport { UserServiceApi } from '../../../components/Management/Users/User.service';\r\nimport * as apiConfig from '../../../configuration/api.config';\r\nimport { Link, Switch, Route } from 'react-router-dom';\r\nimport  UserComponent  from '../../../components/Management/Users/User';\r\nimport { storeUser } from '../../store/user/actions';\r\nimport { AppState } from '../../store';\r\nimport styled from 'styled-components';\r\nimport { Pagination } from '../../../interface/pagination';\r\nimport { Table } from '../../../share-components/Table/Table';\r\n\r\ninterface UserContainerProps {\r\n    user: any,\r\n    storeUser: typeof storeUser\r\n}\r\ninterface UserContainerStates {\r\n    allUser: User[],\r\n    userList: User[],\r\n    isLoading: boolean,\r\n    skipPageReset: boolean,\r\n}\r\n\r\nconst ContainerDiv = styled.div`\r\n    min-height: calc(100vh - 80px);\r\n`;\r\nclass UserContainer extends Component<UserContainerProps, UserContainerStates>{\r\n    userService: UserServiceApi;\r\n    constructor(props: UserContainerProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            allUser: [],\r\n            userList: [],\r\n            isLoading: false,\r\n            skipPageReset: false\r\n        }\r\n        this.userService = new UserServiceApi(apiConfig.apiConfig);\r\n        this.getUserByFilter = this.getUserByFilter.bind(this);\r\n        this.deleteUserHandler = this.deleteUserHandler.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.getUserByFilter({pageSize: 10, pageIndex: 0});\r\n    }\r\n\r\n    async getUserByFilter(pagination: Pagination){\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n        let users = this.state.allUser;\r\n        if(users.length === 0){\r\n            users = await this.userService.getAllUsers();\r\n            this.props.storeUser(users);\r\n        }\r\n        const startRow = pagination.pageSize * pagination.pageIndex\r\n        const endRow = startRow + pagination.pageSize\r\n        this.setState({\r\n            allUser: users,\r\n            userList: users.slice(startRow, endRow),\r\n            isLoading: false\r\n        });\r\n    }\r\n\r\n    async deleteUserHandler(records: User[]){\r\n        if(window.confirm(\"Do you want to delete the selected record(s)?\")){\r\n            await this.userService.deleteRecords(records);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const columns = [\r\n            {\r\n                Header: 'Email',\r\n                accessor: 'email',\r\n                Cell: ({ row }: { row: any }) => (<Link to={`users/${row.original._id}`}>{row.original.email}</Link>)\r\n            },\r\n            {\r\n                Header: 'First Name',\r\n                accessor: 'firstName'\r\n            },\r\n            {\r\n                Header: 'Last Name',\r\n                accessor: 'lastName'\r\n            },\r\n            {\r\n                Header: 'Phone',\r\n                accessor: 'phone'\r\n            },\r\n            {\r\n                Header: 'Address',\r\n                accessor: 'address'\r\n            }];\r\n        return (\r\n            <Switch>\r\n                <Route exact path='/users'>\r\n                    <ContainerDiv className=\"user-list\">\r\n                        <Table columns={columns} \r\n                            data={this.state.userList} \r\n                            pageCount={this.state.allUser.length}\r\n                            fetchData={this.getUserByFilter}\r\n                            deleteRecordHandler={this.deleteUserHandler}\r\n                            TableName=\"Users\"\r\n                        />\r\n                    </ContainerDiv>\r\n                </Route>\r\n                <Route path={`/users/:userId`}>\r\n                    <UserComponent></UserComponent>\r\n                </Route>\r\n            </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nconst MapStatesToProps = (store: AppState) => {\r\n    return {\r\n        user: store.user,\r\n        userList: store.user\r\n    };\r\n}\r\n\r\nconst MapDispatchToProps = {\r\n    storeUser\r\n}\r\n\r\nexport default connect(MapStatesToProps, MapDispatchToProps)(UserContainer)","\nimport { AxiosRequestConfig, AxiosResponse } from \"axios\";\nimport { Config } from \"../../../configuration/config\";\nimport { Activity } from \"../../../class/activity\";\nimport { Comment } from \"../../../class/common/comment\";\nimport { commonAPI } from \"../../../service/common-api.service\";\nimport { apiConfig } from \"../../../configuration/api.config\";\nexport class ActivityService {\n    configs: Config;\n    axiosConfig: AxiosRequestConfig;\n    constructor() {\n        this.configs = new Config();\n        this.axiosConfig = apiConfig;\n\n        this.getAllData = this.getAllData.bind(this);\n        this.getById = this.getById.bind(this);\n    }\n\n    /**\n     * Get all data\n     */\n    public async getAllData(): Promise<Activity[]> {\n        try {\n            const res: AxiosResponse<Activity[]> = await commonAPI.get(this.configs.apiServiceURL.activities);\n            return commonAPI.success(res);\n        }\n        catch (e) {\n            throw e;\n        }\n    }\n\n    /**\n     * get data by id\n     * @param id id\n     */\n    public async getById(id: any): Promise<Activity> {\n        try {\n            const res: AxiosResponse<Activity> = await commonAPI.get(`${this.configs.apiServiceURL.activities}/${id}`);\n            return commonAPI.success(res);\n        }\n        catch (e) {\n            throw e;\n        }\n    }\n\n    public async createNew(obj: Activity): Promise<any> {\n        try{\n            const res = await commonAPI.post(`${this.configs.apiServiceURL.activities}`, obj);\n            return commonAPI.success(res);\n        }\n        catch(e){\n            throw e;\n        }\n    }\n\n    public async update(obj: Activity): Promise<any> {\n        try{\n            const res = await commonAPI.put(`${this.configs.apiServiceURL.activities}`, obj);\n            return commonAPI.success(res);\n        }\n        catch(e){\n            throw e;\n        }\n    }\n\n    public async updateComment(obj: Comment[]): Promise<any>{\n        try{\n            const res = await commonAPI.put(`${this.configs.apiServiceURL.activities}/comments`, obj);\n            return commonAPI.success(res);\n        }\n        catch(e){\n            throw e;\n        }\n    }\n\n    public async deleteRecords(objs: Activity[]) : Promise<any> {\n        try{\n            this.axiosConfig.data = objs;\n            const res = await commonAPI.delete(`${this.configs.apiServiceURL.activities}`, this.axiosConfig);\n            return commonAPI.success(res);\n        }\n        catch(e) {\n            throw e;\n        }\n    }\n}","import { ODateRange } from \"./common/date-range\";\nimport { KeyValue } from \"./common/keyValue\";\nimport { User } from \"./user\";\nimport { Comment } from \"./common/comment\";\n\nexport class Activity {\n    constructor(obj?:any){\n        this._id = obj ? obj._id : null;\n        this.description = obj ? obj.description : '';\n        this.implemetationPlan = obj ? obj.implemetationPlan : '';\n        this.planDate = obj ? obj.planDate : new ODateRange();\n        this.actualDate = obj ? obj.actualDate : new ODateRange();\n        this.status = obj ? obj.status : new KeyValue();\n        this.assignedTo = obj ? obj.assignedTo : new User();\n        this.comments = obj ? obj.comment : [];\n\n        this.createdBy =  obj ? obj.createdBy : new User();\n        this.createdDate =  obj ? obj.createdDate: new Date();\n        this.updatedBy =  obj ? obj.updatedBy : new User();\n        this.updatedDate =  obj ? obj.updatedDate : new Date();\n    }\n    _id:any;\n    description: string;\n    implemetationPlan: string;\n    planDate: ODateRange;\n    actualDate: ODateRange;\n    status: KeyValue;\n    assignedTo: User;\n    comments: Comment[];\n\n    createdBy: User;\n    createdDate: Date;\n    updatedBy: User;\n    updatedDate: Date;\n}","import { RouteComponentProps } from \"react-router-dom\";\nimport { Activity } from \"../../../class/activity\";\nimport { User } from \"../../../class/user\";\nexport interface ActivityProps extends RouteComponentProps<any>{\n    loginUser: User\n}\n\nexport interface ActivityStates {\n    errors:{[s:string]: string[]},\n    activity: Activity,\n    isEditRecord: boolean   //to check this page is edit or create new\n}\n\nexport const initialActivityStates: ActivityStates = {\n    errors: {},\n    activity: new Activity(),\n    isEditRecord: false\n}","import React from 'react';\nimport styled from 'styled-components';\nconst ContainerDiv = styled.div`\n    margin: auto;\n    padding-top: 15px;\n    border-bottom: 0.2px solid #b0b0b0;\n`;\nexport interface BreakLineProps {\n    cssProperties?: React.CSSProperties\n}\nexport class BreakLine extends React.Component<BreakLineProps> {\n\n    render(){\n        return(\n            this.props.cssProperties ? \n            (\n                <div style={this.props.cssProperties}></div>\n            )\n            :\n            (\n                <ContainerDiv></ContainerDiv>\n            )\n            \n        );\n    }\n}","import { Comment } from \"../../class/common/comment\";\nimport { User } from \"../../class/user\";\n\nexport interface CommentProps {\n    comments: Comment[],\n    onSubmitComment: (form: CommentStates) => void,\n    loginUser: User\n}\nexport interface CommentStates {\n    comments: Comment[],\n    newComment: string\n}\nexport const initialCommentStates: CommentStates = {\n    comments: [],\n    newComment: ''\n}","import { User } from \"../user\";\n\nexport class Comment {\n    constructor(obj?: any){\n        this.target = obj ? obj.target : null;\n        this.comment = obj ? obj.comment : null;\n        this.userComment = obj ? obj.userComment : null;\n        this.commentDate = obj ? obj.commentDate : null;\n    }\n    target: string; //target Object's _id\n    comment: string;\n    userComment: User;\n    commentDate: string;\n}","import React from 'react';\nimport { CommentProps, CommentStates, initialCommentStates } from './CommentLogPropsStates';\nimport styled from 'styled-components';\nimport { Comment } from '../../class/common/comment';\n\nconst LeftDiv = styled.div`\n    float: left;\n`;\nconst RightDiv = styled.div`\n    float: right;\n`;\nconst ContainerDiv = styled.div`\n\n`;\nconst ButtonCustom = styled.button`\n    float: right;\n    margin-top: 10px;\n    border-radius: .25rem;\n    border: 0.5px solid #c9c9c9;\n    width: 50px;\n    height: 28px;\n    cursor: pointer;\n`;\nconst ContainerInlineBlock = styled.div`\n    display: inline-block;\n    width: 100%;\n    border-bottom: 0.5px solid gray;\n    padding-bottom: 5px;\n`;\nconst CommentDiv = styled.div`\n    border: 0.5px solid gray;\n    border-radius: .25rem;\n    padding: 15px;\n    margin-top: 10px;\n`;\nexport class CommentLog extends React.Component<CommentProps, CommentStates> {\n    constructor(props: CommentProps) {\n        super(props);\n\n        this.state = initialCommentStates;\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmitComment = this.handleSubmitComment.bind(this);\n        this.renderCommentTitle = this.renderCommentTitle.bind(this);\n    }\n    \n    componentDidMount() {\n        if(this.props.comments){\n            this.setState({\n                comments: this.props.comments\n            });\n        }\n    }\n\n    /**\n     * Handle event textarea change data\n     * @param e textarea changed\n     */\n    handleChange(e: any) {\n        this.setState({\n            newComment: e.target.value\n        });\n    }\n\n    /**\n     * Handle submit comment\n     */\n    handleSubmitComment() {\n        let current = new Date();\n        let comments = this.state.comments;\n        let newComment = new Comment({\n            userComment: this.props.loginUser,\n            comment: this.state.newComment,\n            commentDate: current.toUTCString()\n        });\n        comments.push(newComment);\n        this.setState({\n            comments: comments,\n            newComment: ''\n        }, () => {\n            this.props.onSubmitComment(this.state); //callback\n        });\n    }\n\n    /**\n     * Render Comment title\n     */\n    renderCommentTitle(){\n        let result;\n        if(this.state.comments.length > 0){\n            result = (\n                <div>Activities ({this.state.comments.length}):</div>\n            );\n        }\n        return result;\n    }\n\n    /**\n     * in case of html string => need this function to convert to html dom\n     * @param comment comment\n     */\n    renderCommentRawHTML(comment: string){\n        return (\n            <div dangerouslySetInnerHTML={{__html: comment}}></div>\n        )\n    }\n\n    render() {\n        return (\n            <ContainerDiv>\n                <div className=\"comment-new\">\n                    <div>Note <textarea value={this.state.newComment} onChange={this.handleChange} className=\"form-control\" rows={2}></textarea></div>\n                    <ContainerInlineBlock>\n                        <ButtonCustom onClick={this.handleSubmitComment}>Post</ButtonCustom>\n                    </ContainerInlineBlock>\n                </div>\n                <div className=\"comment-list\">\n                    {\n                        this.renderCommentTitle()\n                    }\n                    {\n                        this.state.comments.map((com, ind) => (\n                            <CommentDiv className=\"comment\" key={ind}>\n                                <ContainerInlineBlock className=\"comment-header\">\n                                    <LeftDiv className=\"comment-user\">\n                                        {\n                                        `${com.userComment.firstName} ${com.userComment.lastName}`\n                                        }\n                                    </LeftDiv>\n                                    <RightDiv className=\"comment-date\">\n                                        {\n                                            com.commentDate\n                                        }\n                                    </RightDiv>\n                                </ContainerInlineBlock>\n                                <div className=\"comment-content\">\n                                    {\n                                        this.renderCommentRawHTML(com.comment)\n                                    }\n                                </div>\n                            </CommentDiv>\n                        ))\n                    }\n                </div>\n            </ContainerDiv>\n        );\n    }\n}","export class CommonService {\n\n    /**\n     * convert date type to string base on format\n     * @param date date\n     * @param format format ex: yyyyMMdd or yyyyMMdd HHmmmSS ..etc\n     */\n    convertDateToStringByFormat(date: Date, format: string): string {\n        let result: string = '';\n        var year = date.getFullYear();\n        var month = date.getMonth() + 1;\n        var day = date.getDate();\n        var hour = date.getHours();\n        var minute = date.getMinutes();\n        var second = date.getSeconds();\n        result = format.replace('yyyy', year.toString())\n            .replace('MM', this.fixedFormatTwoDigit(month))\n            .replace('dd', this.fixedFormatTwoDigit(day))\n            .replace('HH', this.fixedFormatTwoDigit(hour))\n            .replace('mmm', this.fixedFormatTwoDigit(minute))\n            .replace('SS', this.fixedFormatTwoDigit(second));\n        return result;\n    }\n\n    /**\n     * return the number with two fixed digits\n     * @param number source number\n     */\n    fixedFormatTwoDigit(number: number): string {\n        let result: string = '';\n        result = number < 10 ? ('0' + number.toString()) : number.toString();\n        return result;\n    }\n\n    /**\n     * A short demo for compare two object. easiest way to compare object is JSON.stringify(obj)\n     * @param object1 object 1\n     * @param object2 object 2\n     */\n    compareTwoObject<T>(object1: T, object2: T): boolean {\n        let result: boolean = false;\n        //step 1: convert two object to {[s: string] : any} object\n        let obj1: { [s: string]: any } = {};\n        let obj2: { [s: string]: any } = {};\n        for (let [key, value] of Object.entries(object1)) {\n            obj1[key] = value;\n        }\n        for (let [key, value] of Object.entries(object2)) {\n            obj2[key] = value;\n        }\n        //step 2: loop through all properties to check out\n        for (let p in obj1) {\n            if (JSON.stringify(obj1[p]) !== JSON.stringify(obj2[p])) {\n                result = true;\n                break;\n            }\n        }\n        return result;\n    }\n}","import React from 'react';\nimport './Activity.scss';\nimport { ActivityProps, ActivityStates, initialActivityStates } from './ActivityPropsState';\nimport styled from 'styled-components';\nimport { ActivityService } from './Activity.service';\nimport { withRouter } from 'react-router-dom';\nimport {\n    DynamicForm, FormConfig, Validator, QuestionBase, TextboxQuestion\n    , DynamicFormStates, DropdownQuestion, DateRangeQuestion, ReferenceQuestion, TextAreaQuestion\n} from '../../../share-components/DynamicForm';\nimport { Activity } from '../../../class/activity';\nimport { KeyValue } from '../../../class/common/keyValue';\nimport { Config } from '../../../configuration/config';\nimport { BreakLine } from '../../../share-components/Variables'\nimport { CommentLog } from '../../../share-components/CommentLog/CommentLog';\nimport { CommentStates } from '../../../share-components/CommentLog/CommentLogPropsStates';\nimport { CommonService } from '../../../service/common.service';\nimport { Comment } from '../../../class/common/comment';\n\nimport ReactDOMServer from \"react-dom/server\";\n\nconst ContainerDiv = styled.div`\n    width: 80%;\n    margin: auto;\n    padding-top: 50px;\n    padding-bottom: 100px;\n    font-size: small;\n    font-weight: 400;\n`;\nconst CommentLeftStyle: React.CSSProperties = {\n    width: \"50%\",\n    display: \"inline-block\",\n    textAlign: \"right\",\n    paddingRight: \"10px\"\n}\nconst CommentRightStyle: React.CSSProperties = {\n    width: \"50%\",\n    display: \"inline-block\",\n    textAlign: \"left\",\n    paddingLeft: \"10px\"\n}\nconst CommentHeaderStyle: React.CSSProperties = {\n    textAlign: \"left\",\n    paddingLeft: \"20px\"\n}\nconst CommentBreakLineStyle: React.CSSProperties = {\n    margin: \"auto\",\n    paddingTop: \"15px\",\n    borderBottom: \"0.2px dashed #b0b0b0\",\n    width: \"50%\"\n}\nconst TextCenterStyle: React.CSSProperties = {\n    textAlign: \"center\",\n    paddingLeft: \"30px\"\n}\nclass ActivityComponent extends React.Component<ActivityProps, ActivityStates> {\n    config: Config;\n    activityService: ActivityService;\n    formConfig: FormConfig;\n    commonService: CommonService;\n    constructor(props: ActivityProps) {\n        super(props);\n\n        this.state = initialActivityStates;\n        this.formConfig = new FormConfig();\n        this.config = new Config();\n        this.activityService = new ActivityService();\n        this.commonService = new CommonService();\n\n        this.getQuestion = this.getQuestion.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleSubmitComment = this.handleSubmitComment.bind(this);\n        this.renderCommentLog = this.renderCommentLog.bind(this);\n        this.convertFormToObject = this.convertFormToObject.bind(this);\n        this.getActivityUpdated = this.getActivityUpdated.bind(this);\n    }\n\n    async componentDidMount() {\n        let activityId = this.props.match.params['activityId'];\n        if (activityId !== \"createnew\") {\n            let activity = await this.activityService.getById(this.props.match.params['activityId']);\n            this.setState({\n                activity: activity,\n                isEditRecord: true\n            });\n        }\n    }\n\n    /**\n     * Handle submit activity\n     * @param form Dynamic form state\n     */\n    async handleSubmit(form: DynamicFormStates) {\n        //get activity object from dynamic form\n        let activity = this.convertFormToObject(form);\n        let res;\n        if (this.state.isEditRecord) {\n            res = await this.activityService.update(activity);\n        }\n        else {\n            res = await this.activityService.createNew(activity);\n        }\n        //find out which part is updated\n        let activityChanged = this.getActivityUpdated(activity);\n        if (activityChanged !== \"\") {\n            let activityId = this.state.isEditRecord ? activity._id : res;\n            //store changed as a comment\n            let nComment = new Comment({\n                target: activityId,\n                comment: activityChanged,\n                userComment: this.props.loginUser,\n                commentDate: new Date().toUTCString()\n            });\n            activity.comments.push(nComment);\n            //update comment\n            this.activityService.updateComment(activity.comments)\n                .then((result) => {\n                    if(this.state.isEditRecord){\n                        this.setState({\n                            activity: activity\n                        });\n                    }\n                    else{\n                        window.location.reload(false);\n                    }\n                    \n                })\n                .catch((err) => {\n                    //TODO: handle error\n                    console.log(err);\n                });\n        }\n    }\n\n    /**\n     * Compare new submitted activity with current activity to find out which parts are updated\n     * use to show in activity log\n     * @param activity new activity\n     */\n    getActivityUpdated(activity: Activity) {\n        let result = [];\n        //only find out updated when there are some differences\n        if (JSON.stringify(this.state.activity) !== JSON.stringify(activity)) {\n            if (JSON.stringify(this.state.activity.description) !== JSON.stringify(activity.description)) {\n                result.push(\n                    ReactDOMServer.renderToString(\n                        <div>\n                            <div style={CommentLeftStyle}>\n                                <div style={CommentHeaderStyle}>Description:</div>\n                            </div>\n                            <div style={TextCenterStyle}>\n                                {\n                                    activity.description\n                                }\n                            </div>\n                            <BreakLine cssProperties={CommentBreakLineStyle}></BreakLine>\n                        </div>\n                    )\n                )\n            }\n\n            if (JSON.stringify(this.state.activity.implemetationPlan) !== JSON.stringify(activity.implemetationPlan)) {\n                result.push(\n                    ReactDOMServer.renderToString(\n                        <div>\n                            <div style={CommentLeftStyle}>\n                                <div style={CommentHeaderStyle}>Implemetation Plan:</div>\n                            </div>\n                            <div style={TextCenterStyle}>\n                                {\n                                    activity.implemetationPlan\n                                }\n                            </div>\n                            <BreakLine cssProperties={CommentBreakLineStyle}></BreakLine>\n                        </div>\n                    )\n                )\n            }\n\n            if (JSON.stringify(this.state.activity.status) !== JSON.stringify(activity.status)) {\n                result.push(\n                    ReactDOMServer.renderToString(\n                        <div>\n                            <div style={CommentLeftStyle}>\n                                <div style={CommentHeaderStyle}>Status:</div>\n                                <div>Status</div>\n                            </div>\n                            <div style={CommentRightStyle}>\n                                <div></div>\n                                <div>\n                                    {activity.status ?\n                                        `${activity.status.value}`\n                                        : ''\n                                    }\n                                </div>\n                            </div>\n                            <BreakLine cssProperties={CommentBreakLineStyle}></BreakLine>\n                        </div>\n                    )\n                )\n            }\n\n            if (JSON.stringify(this.state.activity.assignedTo) !== JSON.stringify(activity.assignedTo)) {\n                result.push(\n                    ReactDOMServer.renderToString(\n                        <div>\n                            <div style={CommentLeftStyle}>\n                                <div style={CommentHeaderStyle}>Assigned to:</div>\n                                <div>Assigned To</div>\n                            </div>\n                            <div style={CommentRightStyle}>\n                                <div></div>\n                                <div>\n                                    {(activity.assignedTo && activity.assignedTo._id) ?\n                                        `${activity.assignedTo.firstName} ${activity.assignedTo.lastName}`\n                                        : ''\n                                    }\n                                </div>\n                            </div>\n                            <BreakLine cssProperties={CommentBreakLineStyle}></BreakLine>\n                        </div>\n                    )\n                )\n            }\n\n            if (JSON.stringify(this.state.activity.planDate) !== JSON.stringify(activity.planDate)) {\n                result.push(\n                    ReactDOMServer.renderToString(\n                        <div>\n                            <div style={CommentLeftStyle}>\n                                <div style={CommentHeaderStyle}>Plan date:</div>\n                                <div>Start date</div>\n                                <div>End date</div>\n                            </div>\n                            <div style={CommentRightStyle}>\n                                <div></div>\n                                <div>\n                                    {activity.planDate.startDate ?\n                                        this.commonService.convertDateToStringByFormat(activity.planDate.startDate, this.config.datetimeFormat.yyyyMMdd)\n                                        : ''\n                                    }\n                                </div>\n                                <div>\n                                    {activity.planDate.endDate ?\n                                        this.commonService.convertDateToStringByFormat(activity.planDate.endDate, this.config.datetimeFormat.yyyyMMdd)\n                                        : ''\n                                    }\n                                </div>\n                            </div>\n                            <BreakLine cssProperties={CommentBreakLineStyle}></BreakLine>\n                        </div>\n                    )\n                )\n            }\n\n            if (JSON.stringify(this.state.activity.actualDate) !== JSON.stringify(activity.actualDate)) {\n                result.push(\n                    ReactDOMServer.renderToString(\n                        <div>\n                            <div style={CommentLeftStyle}>\n                                <div style={CommentHeaderStyle}>Actual date:</div>\n                                <div>Start date</div>\n                                <div>End date</div>\n                            </div>\n                            <div style={CommentRightStyle}>\n                                <div></div>\n                                <div>\n                                    {activity.actualDate.startDate ?\n                                        this.commonService.convertDateToStringByFormat(activity.actualDate.startDate, this.config.datetimeFormat.yyyyMMdd)\n                                        : ''\n                                    }\n                                </div>\n                                <div>\n                                    {activity.actualDate.endDate ?\n                                        this.commonService.convertDateToStringByFormat(activity.actualDate.endDate, this.config.datetimeFormat.yyyyMMdd)\n                                        : ''\n                                    }\n                                </div>\n                            </div>\n                            <BreakLine cssProperties={CommentBreakLineStyle}></BreakLine>\n                        </div>\n                    )\n                )\n            }\n        }\n        return result.join('');\n    }\n\n    /**\n     * Convert object from dynamic form to activity\n     * @param form Dynamic form state\n     */\n    convertFormToObject(form: DynamicFormStates): Activity {\n        let currentAct = this.state.activity;\n        let formAct = new Activity(form.listFields);\n        formAct._id = currentAct._id;\n        formAct.comments = currentAct.comments;\n        formAct.createdBy = currentAct.createdBy;\n        formAct.createdDate = currentAct.createdDate;\n        formAct.updatedBy = currentAct.updatedBy;\n        formAct.updatedDate = currentAct.updatedDate;\n        return formAct;\n    }\n\n    /**\n     * Handle when user submit comment\n     * @param form Comment state\n     */\n    handleSubmitComment(form: CommentStates) {\n        let activity = this.state.activity;\n        activity.comments = form.comments;\n        activity.comments.forEach((val) => {\n            val.target = activity._id\n        });\n        if (this.state.isEditRecord) {\n            this.activityService.updateComment(activity.comments)\n                .then((result) => {\n                    this.setState({\n                        activity: activity\n                    });\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        }\n    }\n\n    /**\n     * Generate activity questions\n     * @param activity activity object\n     */\n    getQuestion(activity: Activity) {\n        let questions: QuestionBase<any>[] = [];\n        let validators: { [s: string]: Validator<any>; } = {};\n        //Add description text\n        validators = {}\n        validators[this.formConfig.formValidators.require] = {\n            value: true,\n            errorMessage: 'Description is required.'\n        };\n        questions.push(new TextboxQuestion({\n            key: 'description',\n            label: 'Description',\n            value: activity.description,\n            validators: validators,\n            type: this.formConfig.inputTypeDef.text,\n            order: 10\n        }));\n\n        //Add implementation plan text\n        validators = {}\n        validators[this.formConfig.formValidators.require] = {\n            value: true,\n            errorMessage: 'Implementation plan is required.'\n        };\n        questions.push(new TextAreaQuestion({\n            key: 'implemetationPlan',\n            label: 'Implemetation Plan',\n            value: activity.implemetationPlan,\n            validators: validators,\n            rows: 5,\n            order: 20\n        }));\n\n        let options: KeyValue[] = [];\n        Object.keys(this.config.activityStatus).forEach((opt, ind) => {\n            options.push(this.config.activityStatus[opt]);\n        });\n        options = options.sort((a, b) => a.key - b.key);\n        options.unshift(this.config.defaultDropDownOptions.none);   //default value\n        //Add Status text\n        validators = {}\n        validators[this.formConfig.formValidators.require] = {\n            value: true,\n            errorMessage: 'Status is required.'\n        };\n        questions.push(new DropdownQuestion({\n            key: 'status',\n            label: 'Status',\n            value: activity.status,\n            validators: validators,\n            options: options,\n            searchBar: true,\n            order: 50\n        }));\n\n        //Add assigned to text\n        questions.push(new ReferenceQuestion({\n            key: 'assignedTo',\n            label: 'Assigned to',\n            value: activity.assignedTo,\n            serverUrl: this.config.apiServiceURL.users,\n            displayField: 'email',\n            listFields: ['email', 'firstName', 'lastName'],\n            searchBar: true,\n            order: 60\n        }));\n\n\n        //Add plan date\n        let dateRange = activity.planDate;\n        dateRange.startDate = dateRange.startDate ? new Date(dateRange.startDate) : undefined;\n        dateRange.endDate = dateRange.endDate ? new Date(dateRange.endDate) : undefined;\n        validators = {}\n        validators[this.formConfig.formValidators.require] = {\n            value: true,\n            errorMessage: 'Plan date is required.'\n        };\n        questions.push(new DateRangeQuestion({\n            key: 'planDate',\n            label: 'Plan',\n            value: dateRange,\n            validators: validators,\n            order: 70\n        }));\n\n        //Add actual date\n        dateRange = activity.actualDate;\n        dateRange.startDate = dateRange.startDate ? new Date(dateRange.startDate) : undefined;\n        dateRange.endDate = dateRange.endDate ? new Date(dateRange.endDate) : undefined;\n        questions.push(new DateRangeQuestion({\n            key: 'actualDate',\n            label: 'Actual',\n            value: dateRange,\n            order: 80\n        }));\n        return questions;\n    }\n\n    /**\n     * Render comment log DOM\n     */\n    renderCommentLog() {\n        let result;\n        if (this.state.isEditRecord) {\n            result = (\n                <div>\n                    <BreakLine></BreakLine>\n                    <CommentLog loginUser={this.props.loginUser}\n                        comments={this.state.activity.comments}\n                        onSubmitComment={this.handleSubmitComment}></CommentLog>\n                </div>\n            );\n        }\n        return result;\n    }\n\n    render() {\n        let questions = this.getQuestion(this.state.activity);\n        return (\n            <ContainerDiv>\n                <DynamicForm ListFields={questions} OnSubmitCallback={this.handleSubmit} />\n                {\n                    this.renderCommentLog()\n                }\n            </ContainerDiv>\n        );\n    }\n}\n\nexport default withRouter(ActivityComponent);","import './ActivityContainer.scss';\r\nimport React, { Component } from 'react';\r\nimport { Activity } from '../../../class/activity';\r\nimport { ActivityService } from '../../../components/Management/Activities/Activity.service';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { Link, Switch, Route, Redirect } from 'react-router-dom';\r\nimport ActivityComponent from '../../../components/Management/Activities/Activity';\r\nimport { CommonService } from '../../../service/common.service';\r\nimport { Config } from '../../../configuration/config';\r\nimport { storeActivities } from '../../store/activity/actions';\r\nimport { AppState } from '../../store';\r\nimport { Pagination } from '../../../interface/pagination';\r\nimport { Table } from '../../../share-components/Table/Table';\r\nimport { SelectColumnFilter } from '../../../share-components/Table/Filter/Filter';\r\n\r\ninterface ActivityContainerProps {\r\n    user: any,\r\n    storeActivities: typeof storeActivities\r\n}\r\ninterface ActivityContainerStates {\r\n    allActivity: Activity[],\r\n    activityList: Activity[],\r\n    isLoading: boolean,\r\n    redirectCreateNew: boolean\r\n}\r\n\r\nconst ContainerDiv = styled.div`\r\n    min-height: calc(100vh - 80px);\r\n`;\r\n\r\nclass ActivityContainer extends Component<ActivityContainerProps, ActivityContainerStates> {\r\n    activityService: ActivityService;\r\n    config: Config;\r\n    commonService: CommonService;\r\n    constructor(props: ActivityContainerProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            allActivity: [],\r\n            activityList: [],\r\n            isLoading: false,\r\n            redirectCreateNew: false\r\n        }\r\n        this.activityService = new ActivityService();\r\n        this.commonService = new CommonService();\r\n        this.config = new Config();\r\n\r\n        this.getActivityByFilter = this.getActivityByFilter.bind(this);\r\n        this.deleteActivityHandler = this.deleteActivityHandler.bind(this);\r\n        this.addActivityHandler = this.addActivityHandler.bind(this);\r\n        this.redirectToCreateNew = this.redirectToCreateNew.bind(this);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.redirectCreateNew) {\r\n            //reset flag before redirect to new children component.\r\n            //if not then next time this flag is still true and could not redirect again\r\n            debugger;\r\n            this.setState({\r\n                redirectCreateNew: false\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount() { \r\n    }\r\n\r\n    /**\r\n     * Handle get data by filter\r\n     * @param pagination pagination object\r\n     */\r\n    async getActivityByFilter(pagination: Pagination) {\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n        let activities = this.state.allActivity;\r\n        if (activities.length === 0) {\r\n            activities = await this.activityService.getAllData();\r\n            this.props.storeActivities(activities);\r\n        }\r\n        const startRow = pagination.pageSize * pagination.pageIndex\r\n        const endRow = startRow + pagination.pageSize\r\n        this.setState({\r\n            allActivity: activities,\r\n            activityList: activities.slice(startRow, endRow),\r\n            isLoading: false\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handle delete activity\r\n     * @param records deleted records\r\n     */\r\n    async deleteActivityHandler(records: Activity[]) {\r\n        if (window.confirm(\"Do you want to delete the selected record(s)?\")) {\r\n            await this.activityService.deleteRecords(records);\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Move to create new page\r\n     */\r\n    addActivityHandler() {\r\n        this.setState({\r\n            redirectCreateNew: true\r\n        });\r\n    }\r\n\r\n    /**\r\n     * React-router redirect to create new page\r\n     */\r\n    redirectToCreateNew() {\r\n        if (this.state.redirectCreateNew) {\r\n            return (\r\n                <Redirect push={true} to=\"/management/activities/createnew\"></Redirect>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const columns = [\r\n            {\r\n                Header: 'Description',\r\n                id: 'description',\r\n                accessor: 'description',\r\n                Cell: ({ row }: { row: any }) => (<Link to={`activities/${row.original._id}`}>{row.original.description}</Link>)\r\n            },\r\n            {\r\n                Header: 'Implementation Plan',\r\n                id: 'implemetationPlan',\r\n                accessor: 'implemetationPlan',\r\n            },\r\n            {\r\n                Header: 'Plan date',\r\n                id: 'planDate',\r\n                columns: [\r\n                    {\r\n                        Header: 'Start date',\r\n                        id: 'planStartDate',\r\n                        accessor: (row: Activity) => {\r\n                            let result = '';\r\n                            if (row.planDate && row.planDate.startDate) {\r\n                                let accessor = new Date(row.planDate.startDate);\r\n                                result = this.commonService.convertDateToStringByFormat(accessor, this.config.datetimeFormat.yyyyMMdd)\r\n                            }\r\n                            return result;\r\n                        }\r\n                    },\r\n                    {\r\n                        Header: 'End date',\r\n                        id: 'planEndDate',\r\n                        accessor: (row: Activity) => {\r\n                            let result = '';\r\n                            if (row.planDate && row.planDate.endDate) {\r\n                                let accessor = new Date(row.planDate.endDate);\r\n                                result = this.commonService.convertDateToStringByFormat(accessor, this.config.datetimeFormat.yyyyMMdd)\r\n                            }\r\n                            return result;\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                Header: 'Actual date',\r\n                id: 'actualDate',\r\n                columns: [\r\n                    {\r\n                        Header: 'Start date',\r\n                        id: 'actualStartDate',\r\n                        accessor: (row: Activity) => {\r\n                            let result = '';\r\n                            if (row.actualDate && row.actualDate.startDate) {\r\n                                let accessor = new Date(row.actualDate.startDate);\r\n                                result = this.commonService.convertDateToStringByFormat(accessor, this.config.datetimeFormat.yyyyMMdd)\r\n                            }\r\n                            return result;\r\n                        }\r\n                    },\r\n                    {\r\n                        Header: 'End date',\r\n                        id: 'actualEndDate',\r\n                        accessor: (row: Activity) => {\r\n                            let result = '';\r\n                            if (row.actualDate && row.actualDate.endDate) {\r\n                                let accessor = new Date(row.actualDate.endDate);\r\n                                result = this.commonService.convertDateToStringByFormat(accessor, this.config.datetimeFormat.yyyyMMdd)\r\n                            }\r\n                            return result;\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                Header: 'Status',\r\n                id: 'status',\r\n                // disableFilters: true,\r\n                Filter: SelectColumnFilter,\r\n                filter: 'includes',\r\n                accessor: (row: Activity) => {\r\n                    let result = '';\r\n                    if (row.status) {\r\n                        result = row.status.value\r\n                    }\r\n                    return result;\r\n                },\r\n            },\r\n            {\r\n                Header: 'Assigned to',\r\n                id: 'assignedTo',\r\n                accessor: (row: Activity) => row.assignedTo ? `${row.assignedTo.firstName} ${row.assignedTo.lastName}` : ''\r\n            }\r\n        ];\r\n        return (\r\n            <div>\r\n                {\r\n                    this.redirectToCreateNew()\r\n                }\r\n                <Switch>\r\n                    <Route exact path=\"/management/activities\">\r\n                        <ContainerDiv className=\"activity-list\">\r\n                            <Table columns={columns}\r\n                                data={this.state.activityList}\r\n                                pageCount={this.state.allActivity.length}\r\n                                fetchData={this.getActivityByFilter}\r\n                                deleteRecordHandler={this.deleteActivityHandler}\r\n                                addRecordHandler={this.addActivityHandler}\r\n                                TableName=\"Activities\"\r\n                            />\r\n                        </ContainerDiv>\r\n                    </Route>\r\n                    <Route path={`/management/activities/:activityId`}>\r\n                        <ActivityComponent loginUser={this.props.user.currentUser}></ActivityComponent>\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst MapStatesToProps = (store: AppState) => {\r\n    return {\r\n        user: store.user,\r\n        activityList: store.activities\r\n    };\r\n}\r\n\r\nconst MapDispatchToProps = {\r\n    storeActivities\r\n};\r\n\r\nexport default connect(MapStatesToProps, MapDispatchToProps)(ActivityContainer)","import { REMOVE_ACTIVITIES, STORE_ACTIVITIES } from \"./types\";\nimport { Activity } from \"../../../class/activity\";\n\nexport function storeActivities(acts: Activity[]) {\n  return {\n    type: STORE_ACTIVITIES,\n    payload: acts\n  };\n}\n\nexport function removeActivities(timestamp: number) {\n  return {\n    type: REMOVE_ACTIVITIES,\n    meta: {\n      timestamp\n    }\n  };\n}\n","import { Activity } from \"../../../class/activity\";\n\n// Describing the different ACTION NAMES available\nexport const STORE_ACTIVITIES = \"STORE_ACTIVITIES\";\nexport const REMOVE_ACTIVITIES = \"REMOVE_ACTIVITIES\";\n\ninterface StoreActivitiesAction {\n  type: typeof STORE_ACTIVITIES;\n  payload: Activity[];\n}\n\ninterface RemoveActivitiesAction {\n  type: typeof REMOVE_ACTIVITIES;\n  meta: {\n    timestamp: number;\n  };\n}\n\nexport type ActivityActionTypes = StoreActivitiesAction | RemoveActivitiesAction;\n","export interface LoginProps {\n\tOnLogin: (form:LoginState) => void,\n\tForgotPasswordRedirectLink: string,\n\tRegisterPageRedirectLink: string\n}\n\nexport type LoginState = {\n\temail: string,\n\tpassword: string,\n\trememberMe: boolean,\n\tdisableSubmitButton: boolean,\n\tredirectForgotPassword: boolean,\n\tredirectRegisterPage: boolean\n}\n\nexport const initialLoginState: LoginState = {\n\temail: '',\n\tpassword: '',\n\trememberMe: false,\n\tdisableSubmitButton: true,\n\tredirectForgotPassword: false,\n\tredirectRegisterPage: false\n}","//style Bootstrap\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { LoginProps, LoginState, initialLoginState } from \"./LoginPropsStates\";\nimport { Redirect } from \"react-router-dom\";\nconst Container = styled.div`\n            background-color: #232323;\n            padding-top: 30px;\n            padding-bottom: 20px;\n        `;\nconst LoginDiv = styled.div`\n            width: 400px;\n            margin: auto;\n            background-color: #e9ecef;\n            padding: 40px;\n            border-radius: 15px;\n        `;\nconst LinkDiv = styled.div`\n            margin-top: 15px;\n        `;\nconst Margin0: React.CSSProperties = {\n    margin: 0\n};\nconst TextCenter: React.CSSProperties = {\n    textAlign: 'center'\n};\nconst LinkA = styled.a`\n    color: #149dcc !important;\n`;\nexport default class Login extends Component<LoginProps, LoginState> {\n    constructor(props: LoginProps) {\n        super(props);\n\n        this.state = initialLoginState;\n        this.handleChange = this.handleChange.bind(this);\n        this.handleChangeByClick = this.handleChangeByClick.bind(this);\n        this.handleForgotPassowrd = this.handleForgotPassowrd.bind(this);\n        this.handleRegisterPage = this.handleRegisterPage.bind(this);\n    }\n\n    /**\n     * Handle change form's fields\n     * @param event change event\n     */\n    handleChange(event: any) {\n        this.setState<never>({\n            [event.target.name]: event.target.value\n        }, ()=>{\n            let disabled = this.state.email !== '' && this.state.password !== '' ? false : true;\n            this.setState({\n                disableSubmitButton: disabled\n            });\n        });\n    }\n\n    /**\n     * handle state change by click\n     * @param event click event\n     */\n    handleChangeByClick(event: any){\n        this.setState<never>({\n            [event.target.name]: event.target.checked\n        });\n    }\n\n    /**\n     * handle forgot password click link\n     */\n    handleForgotPassowrd(){\n        this.setState({\n            redirectForgotPassword: true\n        });\n    }\n\n    /**\n     * handle click register page\n     */\n    handleRegisterPage(){\n        this.setState({\n            redirectRegisterPage: true\n        })\n    }\n\n    render() {\n        //redirect to forgot password page\n        if(this.state.redirectForgotPassword){\n            return <Redirect push={true} to={this.props.ForgotPasswordRedirectLink} />\n        }\n        //redirect to register page\n        if(this.state.redirectRegisterPage){\n            return <Redirect push={true} to={this.props.RegisterPageRedirectLink}/>\n        }\n        //load login form\n        return (\n            <Container>\n                <LoginDiv>\n                    <form onSubmit={(e) => {e.preventDefault(); this.props.OnLogin(this.state)}}>\n                        <h3 style={TextCenter}>Login</h3>\n\n                        <div className=\"form-group\">\n                            <label><strong>Email address</strong></label>\n                            <input name=\"email\" \n                                type=\"email\" \n                                onChange={this.handleChange} \n                                className=\"form-control\" \n                                placeholder=\"Enter email\" />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label><strong>Password</strong></label>\n                            <input name=\"password\" \n                                type=\"password\" \n                                onChange={this.handleChange} \n                                className=\"form-control\" \n                                placeholder=\"Enter password\" />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <div className=\"custom-control custom-checkbox\">\n                                <input name=\"rememberMe\"\n                                    type=\"checkbox\" \n                                    className=\"custom-control-input\" \n                                    onClick={this.handleChangeByClick}\n                                    id=\"customCheck1\" />\n                                <label className=\"custom-control-label\" htmlFor=\"customCheck1\">\n                                    <strong>Remember me</strong>\n                                </label>\n                            </div>\n                        </div>\n\n                        <input style={Margin0} \n                            type=\"submit\" \n                            value=\"Submit\" \n                            className=\"btn btn-primary btn-block\" \n                            disabled={this.state.disableSubmitButton}\n                            />                        \n                        <LinkDiv>\n                            <p className=\"float-left\">\n                                <LinkA className=\"App-link\" onClick={this.handleRegisterPage}>Sign Up</LinkA>\n                            </p>\n                            <p className=\"float-right\">\n                                Forgot <LinkA onClick={this.handleForgotPassowrd}>password?</LinkA>\n                            </p>\n                        </LinkDiv>\n                    </form>\n                </LoginDiv>\n            </Container>\n        );\n    }\n}","import React from 'react';\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tSwitch,\r\n\tRoute,\r\n\tRedirect\r\n} from \"react-router-dom\";\r\nimport './App.css';\r\nimport { About } from './components/About/About';\r\nimport { Home } from './components/Home/Home';\r\nimport Toolbar from './components/UI/Toolbar/Toolbar';\r\nimport { Contact } from './components/Contact/Contact';\r\nimport SignUp from './components/Auth/SignUp/SignUp';\r\nimport { SignUpState } from './components/Auth/SignUp/SignUpPropsStates';\r\nimport { UserServiceApi } from './components/Management/Users/User.service';\r\nimport * as apiConfig from './configuration/api.config';\r\nimport { User } from './class/user';\r\nimport { AlertDiv } from './share-components/Alert/AlertComponent';\r\nimport { Config } from './configuration/config';\r\nimport UserContainer from './redux/containers/Users/UserContainer';\r\nimport ActivityContainer from './redux/containers/Activities/ActivityContainer';\r\nimport { connect } from 'react-redux';\r\nimport { AppState } from './redux/store';\r\nimport { loginUser } from './redux/store/user/actions';\r\nimport { LoginState } from './components/Auth/Login/LoginPropsStates';\r\nimport { Credentials } from './interface/Credentials';\r\nimport Login from './components/Auth/Login/Login';\r\n\r\ntype AppStates = {\r\n\tredirectLogin: boolean,\r\n\tredirectHome: boolean,\r\n\talertConfig: any\r\n}\r\ntype AppProps = {\r\n\tuser: any,\r\n\tloginUser: typeof loginUser;\r\n}\r\nclass App extends React.Component<AppProps, AppStates> {\r\n\tuserService: UserServiceApi;\t//user service\r\n\tconfig: Config;\r\n\tconstructor(props: AppProps) {\r\n\t\tsuper(props);\r\n\t\t//initial variables\r\n\t\tthis.state = {\r\n\t\t\tredirectLogin: false,\r\n\t\t\tredirectHome: false,\r\n\t\t\talertConfig: {}\r\n\t\t}\r\n\t\tthis.userService = new UserServiceApi(apiConfig.apiConfig);\r\n\t\tthis.config = new Config();\r\n\r\n\t\t//binding functions\r\n\t\t//login component\r\n\t\tthis.handleOnSubmitLoginForm = this.handleOnSubmitLoginForm.bind(this);\r\n\t\t//Sign up component\r\n\t\tthis.handleOnSubmitRegisterForm = this.handleOnSubmitRegisterForm.bind(this);\r\n\r\n\t\t//Router\r\n\t\tthis.handleRenderRedirectRouter = this.handleRenderRedirectRouter.bind(this);\r\n\r\n\t\t//Alert component\r\n\t\tthis.handleRenderAlert = this.handleRenderAlert.bind(this);\r\n\t\tthis.handleOnCloseAlert = this.handleOnCloseAlert.bind(this);\r\n\t}\r\n\r\n\t//------------------------------------------LOG IN COMPONENT-----------------------------\r\n\t/**\r\n\t * handle login form submit\r\n\t * @param form login state\r\n\t */\r\n\tasync handleOnSubmitLoginForm(form: LoginState) {\r\n\t\tlet credentials: Credentials = {\r\n\t\t\tusername: form.email,\r\n\t\t\tpassword: form.password\r\n\t\t}\r\n\t\tthis.userService.userLogin(credentials)\r\n\t\t\t.then((result) => {\r\n\t\t\t\tif (result && result.email === form.email) {\r\n\t\t\t\t\tlet user = new User(result);\r\n\t\t\t\t\tthis.props.loginUser(user);\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tredirectHome: true\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\talertConfig: {\r\n\t\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\t\tvalue: this.config.commonMessage.userNotFound,\r\n\t\t\t\t\t\t\tvariant: this.config.alertVariants.danger\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}).catch((err) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\talertConfig: {\r\n\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\tvalue: this.config.commonMessage.loginError,\r\n\t\t\t\t\t\tvariant: this.config.alertVariants.danger\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}\r\n\r\n\t//------------------------------------------SIGN UP COMPONENT----------------------------\r\n\t/**\r\n\t * handle sign up form submit\r\n\t * @param form sign up state\r\n\t */\r\n\thandleOnSubmitRegisterForm(form: SignUpState) {\r\n\t\tlet newUser = new User({\r\n\t\t\tfirstName: form.firstName,\r\n\t\t\tlastName: form.lastName,\r\n\t\t\temail: form.email,\r\n\t\t\tpassword: form.password,\r\n\t\t\tphone: form.phone,\r\n\t\t\taddress: form.address\r\n\t\t});\r\n\t\tthis.userService.userRegister(newUser)\r\n\t\t\t.then((result) => {\r\n\t\t\t\tif (result && result.email === form.email) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tredirectLogin: true\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\talertConfig: {\r\n\t\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\t\tvalue: this.config.commonMessage.signUpError,\r\n\t\t\t\t\t\t\tvariant: this.config.alertVariants.danger\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\talertConfig: {\r\n\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\tvalue: this.config.commonMessage.signUpError,\r\n\t\t\t\t\t\tvariant: this.config.alertVariants.danger\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Handle the case system want to redirect new page\r\n\t */\r\n\thandleRenderRedirectRouter() {\r\n\t\tif (this.state.redirectLogin) {\r\n\t\t\treturn (\r\n\t\t\t\t<Redirect push={true} to=\"/login\"></Redirect>\r\n\t\t\t)\r\n\t\t}\r\n\t\telse if (this.state.redirectHome) {\r\n\t\t\treturn (\r\n\t\t\t\t<Redirect push={true} to=\"/\"></Redirect>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\t//------------------------------------------ALERT COMPONENT------------------------------\r\n\t/**\r\n\t * Handle on close alert component\r\n\t */\r\n\thandleOnCloseAlert() {\r\n\t\tthis.setState({\r\n\t\t\talertConfig: {}\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * Handle render alert component\r\n\t */\r\n\thandleRenderAlert() {\r\n\t\tif (this.state.alertConfig.show) {\r\n\t\t\treturn (\r\n\t\t\t\t<AlertDiv variant={this.state.alertConfig.variant}\r\n\t\t\t\t\tshow={true}\r\n\t\t\t\t\tvalue={this.state.alertConfig.value}\r\n\t\t\t\t\tonClose={this.handleOnCloseAlert}\r\n\t\t\t\t>\r\n\t\t\t\t</AlertDiv>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t// // Before the component mounts, we initialise our state\r\n\t// componentWillMount() {\r\n\t// }\r\n\r\n\t// After the component did mount\r\n\tcomponentDidMount() {\r\n\t\tconsole.log('public url: ', process.env.PUBLIC_URL);\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tif (this.state.redirectHome) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tredirectHome: false\r\n\t\t\t});\r\n\t\t}\r\n\t\telse if (this.state.redirectLogin) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tredirectLogin: false\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Router>\r\n\t\t\t\t<Toolbar />\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.handleRenderAlert()\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.handleRenderRedirectRouter()\r\n\t\t\t\t}\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path={process.env.PUBLIC_URL + '/about'}>\r\n\t\t\t\t\t\t\t<About />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={process.env.PUBLIC_URL + '/contact'}>\r\n\t\t\t\t\t\t\t<Contact />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path=\"/management/activities\">\r\n\t\t\t\t\t\t\t<ActivityContainer />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path=\"/users\">\r\n\t\t\t\t\t\t\t<UserContainer />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.props.user.currentUser._id === undefined ?\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t<Route exact path=\"/login\">\r\n\t\t\t\t\t\t\t\t\t\t<Login OnLogin={this.handleOnSubmitLoginForm}\r\n\t\t\t\t\t\t\t\t\t\t\tRegisterPageRedirectLink=\"/signup\"\r\n\t\t\t\t\t\t\t\t\t\t\tForgotPasswordRedirectLink=\"/forgotpassword\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t('')\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<Route exact path=\"/signup\">\r\n\t\t\t\t\t\t\t<SignUp OnRegister={this.handleOnSubmitRegisterForm}\r\n\t\t\t\t\t\t\t\tLoginRedirectLink=\"/login\" />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={process.env.PUBLIC_URL + '/'}>\r\n\t\t\t\t\t\t\t<Home />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</div>\r\n\t\t\t</Router>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n\tuser: state.user\r\n});\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\t{ loginUser }\r\n)(App);","import React from 'react';\nexport class Footer extends React.Component {\n    render() {\n        return (\n            <section className=\"cid-s05i0OO9sN\" id=\"footer\">\n                <div className=\"container\">\n                    <div className=\"media-container-row content text-white\">\n                        <div className=\"col-12 col-md-3\">\n                            <div className=\"media-wrap\">\n                                <a href=\"/\">\n                                    <img src={`${process.env.PUBLIC_URL}/assets/images/mbr-192x108.jpg`} alt=\"GrownUp\" title=\"\" />\n                                </a>\n                            </div>\n                        </div>\n                        <div className=\"col-12 col-md-3 mbr-fonts-style display-7\">\n                            <h5 className=\"pb-3\">\n                                Address\n                            </h5>\n                            <p className=\"mbr-text\">36 Bo Bao Tan Thang,<br />Tan Phu, Ho Chi Minh, VN</p>\n                        </div>\n                        <div className=\"col-12 col-md-6 mbr-fonts-style display-7\">\n                            <h5 className=\"pb-3\">\n                                Contacts\n                            </h5>\n                            <p className=\"mbr-text\">\n                                Email: robertvo.developer.93@gmail.com &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />Phone: +84 (0) 33 870 5850\n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"footer-lower\">\n                        <div className=\"media-container-row\">\n                            <div className=\"col-sm-12\">\n                                <hr />\n                            </div>\n                        </div>\n                        <div className=\"media-container-row mbr-white\">\n                            <div className=\"col-sm-6 copyright\">\n                                <p className=\"mbr-text mbr-fonts-style display-7\">\n                                    © Copyright 2020 GrownUp - All Rights Reserved\n                                </p>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <div className=\"social-list align-right\">\n                                    <div className=\"soc-item\">\n                                        <a rel=\"noopener noreferrer\" href=\"https://twitter.com/mobirise\" target=\"_blank\">\n                                            <span className=\"socicon-twitter socicon mbr-iconfont mbr-iconfont-social\"></span>\n                                        </a>\n                                    </div>\n                                    <div className=\"soc-item\">\n                                        <a rel=\"noopener noreferrer\" href=\"https://www.facebook.com/pages/Mobirise/1616226671953247\" target=\"_blank\">\n                                            <span className=\"socicon-facebook socicon mbr-iconfont mbr-iconfont-social\"></span>\n                                        </a>\n                                    </div>\n                                    <div className=\"soc-item\">\n                                        <a rel=\"noopener noreferrer\" href=\"https://www.youtube.com/c/mobirise\" target=\"_blank\">\n                                            <span className=\"socicon-youtube socicon mbr-iconfont mbr-iconfont-social\"></span>\n                                        </a>\n                                    </div>\n                                    <div className=\"soc-item\">\n                                        <a rel=\"noopener noreferrer\" href=\"https://instagram.com/mobirise\" target=\"_blank\">\n                                            <span className=\"socicon-instagram socicon mbr-iconfont mbr-iconfont-social\"></span>\n                                        </a>\n                                    </div>\n                                    <div className=\"soc-item\">\n                                        <a rel=\"noopener noreferrer\" href=\"https://plus.google.com/u/0/+Mobirise\" target=\"_blank\">\n                                            <span className=\"socicon-googleplus socicon mbr-iconfont mbr-iconfont-social\"></span>\n                                        </a>\n                                    </div>\n                                    <div className=\"soc-item\">\n                                        <a rel=\"noopener noreferrer\" href=\"https://www.behance.net/Mobirise\" target=\"_blank\">\n                                            <span className=\"socicon-behance socicon mbr-iconfont mbr-iconfont-social\"></span>\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}","import {\n  USER_LOGIN,\n  USER_LOGOUT,\n  UserActionTypes,\n  STORE_USER\n} from \"./types\";\n\nconst initialState = {\n  currentUser: {},\n  userList: []\n}\n\nexport function userReducer(\n  state = initialState,\n  action: UserActionTypes\n): any {\n  switch (action.type) {\n    case USER_LOGIN:\n      return {\n        ...state, currentUser: action.payload\n      };\n    case USER_LOGOUT:\n      return {\n        ...state, currentUser: {}\n      };\n    case STORE_USER:\n      return {\n        ...state, userList: action.payload\n      }\n    default:\n      return state;\n  }\n}\n","import {\n  STORE_ACTIVITIES,\n  REMOVE_ACTIVITIES,\n  ActivityActionTypes\n} from \"./types\";\n\nconst initialState = {\n  activities: []\n}\n\nexport function activityReducer(\n  state = initialState,\n  action: ActivityActionTypes\n): any {\n  switch (action.type) {\n    case STORE_ACTIVITIES:\n      return {\n        ...state, activities: action.payload\n      };\n    case REMOVE_ACTIVITIES:\n      return {\n        ...state, activities: []\n      };\n    default:\n      return state;\n  }\n}\n","export const UPDATE_REQUEST = \"UPDATE_REQUEST\";\n\nexport interface UpdateRequestsAction {\n  type: typeof UPDATE_REQUEST;\n  payload: number;\n}\n\nexport type RequestActionTypes = UpdateRequestsAction;\n","import {\n  UPDATE_REQUEST,\n  RequestActionTypes\n} from \"./types\";\n\nconst initialState = {\n  numberOfRequest: 0\n}\n\nexport function requestReducer(\n  state = initialState,\n  action: RequestActionTypes\n): any {\n  switch (action.type) {\n    case UPDATE_REQUEST:\n      return {\n        ...state, numberOfRequest: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { UpdateRequestsAction, UPDATE_REQUEST } from \"./types\";\n\nexport function updateRequest(noRequests: number): UpdateRequestsAction{\n  return {\n    type: UPDATE_REQUEST,\n    payload: noRequests\n  };\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { persistStore, persistReducer } from 'redux-persist';\t//https://github.com/rt2zz/redux-persist\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport { userReducer } from \"./user/reducers\";\nimport { activityReducer } from \"./activity/reducers\";\nimport { requestReducer } from \"./request/reducers\";\nimport axiosMiddleware from 'redux-axios-middleware';\nimport { commonAPI } from \"../../service/common-api.service\";\nimport { updateRequest } from \"./request/actions\";\n\n//define persistConfig\nconst persistConfig = {\n\tkey: 'root',\n\tstorage,\n}\n//combine all reducer\nconst rootReducer = combineReducers({\n\tuser: userReducer,\n\tactivities: activityReducer,\n\trequest: requestReducer\n});\n//define AppState\nexport type AppState = ReturnType<typeof rootReducer>;\n//persist reducer\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n//add middleware redux-thunk => could view on chrome browser\nconst middlewares = [thunkMiddleware];\nlet numberOfRequest = 0;\nconst middlewareConfig = {\n\tinterceptors: {\n\t\trequest: [{\n\t\t\tsuccess: function ({ getState, dispatch, getSourceAction } : any, req : any) {\n\t\t\t\tnumberOfRequest++;\n\t\t\t\tconsole.log(numberOfRequest);\n\t\t\t\tdispatch(updateRequest(numberOfRequest));\n\t\t\t\treturn req;\n\t\t\t},\n\t\t\terror: function ({ getState, dispatch, getSourceAction } : any, error : any) {\n\t\t\t\tconsole.log(error);\n\t\t\t\treturn error;\n\t\t\t}\n\t\t}\n\t\t],\n\t\tresponse: [{\n\t\t\tsuccess: function ({ getState, dispatch, getSourceAction } : any, req : any) {\n\t\t\t\tnumberOfRequest--;\n\t\t\t\tconsole.log(numberOfRequest);\n\t\t\t\tdispatch(updateRequest(numberOfRequest));\n\t\t\t\treturn req;\n\t\t\t},\n\t\t\terror: function ({ getState, dispatch, getSourceAction } : any, error : any) {\n\t\t\t\tnumberOfRequest--;\n\t\t\t\tconsole.log(numberOfRequest);\n\t\t\t\tdispatch(updateRequest(numberOfRequest));\n\t\t\t\treturn error;\n\t\t\t}\n\t\t}\n\t\t]\n\t}\n};\nconst middleWareEnhancer = applyMiddleware(...middlewares\n\t, axiosMiddleware(commonAPI.api, middlewareConfig)\n\t);\nexport default () => {\n\tlet store: any = createStore(\n\t\tpersistedReducer\n\t\t, composeWithDevTools(middleWareEnhancer)\n\t)\n\tlet persistor = persistStore(store)\n\treturn { store, persistor }\n}","import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\"; //https://github.com/davidhu2000/react-spinners\nimport { connect } from 'react-redux';\nimport { AppState } from \"../../redux/store\";\nimport styled from \"styled-components\";\n\n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\ndisplay: block;\nmargin: 0 auto;\nmargin-top: 200px;\nborder-color: red;\n`;\nconst ContainerDiv = styled.div`\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    z-index: 10000;\n    opacity: 0.5;\n    background-color: gray;\n    top: 0px;\n`;\ninterface LoadingSpinnerProps {\n    numberOfRequest: number\n}\ninterface LoadingSpinnerStates {\n\n}\nclass LoadingSpinner extends React.Component<LoadingSpinnerProps, LoadingSpinnerStates> {\n    componentDidUpdate() {\n        console.log(this.props);\n    }\n    render() {\n        return (\n            <div>\n                {\n                    this.props.numberOfRequest > 0 ?\n                        (\n                            <ContainerDiv className=\"sweet-loading\">\n                                <BounceLoader\n                                    css={override}\n                                    size={100}\n                                    color={\"#123abc\"}\n                                    loading={this.props.numberOfRequest > 0}\n                                />\n                            </ContainerDiv>\n                        )\n                        : ('')\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: AppState) => ({\n    numberOfRequest: state.request.numberOfRequest\n});\n\nexport default connect(\n    mapStateToProps,\n    {}\n)(LoadingSpinner);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport App from \"./App\";\nimport { Footer } from './components/Footer/Footer';\nimport * as persistStore from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport LoadingSpinner from './share-components/Spinner/LoadingSpinner';\n\nReactDOM.render(\n\t<Provider store={persistStore.default().store}>\n\t\t<PersistGate loading={null} persistor={persistStore.default().persistor}>\n\t\t\t<LoadingSpinner />\n\t\t\t<App />\n\t\t\t<Footer />\n\t\t</PersistGate>\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","export class FormConfig {\n    formValidators = {          //the understand the value => refer the attributes of Validators in angular form, see in question-control.service.ts\n        require: \"required\",\n        minLength: \"minLength\",\n        maxLength: \"maxLength\",\n        email: \"email\"\n    }\n\n    inputTypeDef = {\n        button: 'button',\n        checkbox: 'checkbox',\n        color: 'color',\n        date: 'date',\n        datetime: 'datetime',\n        datetimeLocal: 'datetime-local',\n        email: 'email',\n        file: 'file',\n        hidden: 'hidden',\n        image: 'image',\n        month: 'month',\n        number: 'number',\n        password: 'password',\n        radio: 'radio',\n        range: 'range',\n        reset: 'reset',\n        search: 'search',\n        submit: 'submit',\n        tel: 'tel',\n        text: 'text',\n        time: 'time',\n        url: 'url',\n        week: 'week'\n    }\n\n    questionControlType = {\n        textbox: 'textbox',\n        textarea: 'textarea',\n        dropdown: 'dropdown',\n        reference: 'reference',\n        dateRange: 'daterange'\n    }\n}","export class KeyValue{\n    constructor(obj?: KeyValue){\n        this.key = obj ? obj.key : null;\n        this.value = obj ? obj.value : null;\n    }\n    key: any;\n    value: any;\n}","import { Validator } from \"../class/validator\";\n\nexport class QuestionBase<T> {\n\tvalue?: T;\n\tkey: string;\n\tlabel: string;\n\trequired: boolean;\n\torder: number;\n\tcontrolType: string;\n\ttype: string;\n\toptions: { key: string, value: string }[];\n\tvalidators: {[s:string]: Validator<any>};\n\tmultiple: boolean;    //dropdown list multiple\n\trows: number;       //number of rows in text area\n\treadonly: boolean;  //question is readonly or not\n\tsearchBar: boolean;\n\tserverUrl: string;\n\tdisplayField: string;\n\tlistFields: string[];\n\tfilterCondition: string;\n\n\tconstructor(options: {\n\t\tvalue?: T,\n\t\tkey?: string,\n\t\tlabel?: string,\n\t\trequired?: boolean,\n\t\torder?: number,\n\t\tcontrolType?: string,\n\t\ttype?: string,\n\t\toptions?: { key: string, value: string }[],\n\t\tvalidators?: any,\n\t\tmultiple?: boolean,\n\t\trows?: number,\n\t\treadonly?: boolean,\n\t\tsearchBar?: boolean,\n\t\tserverUrl?: string,\n\t\tdisplayField?: string,\n\t\tlistFields?: string[],\n\t\tfilterCondition?: string\n\t} = {}) {\n\t\tthis.value = options.value;\n\t\tthis.key = options.key || '';\n\t\tthis.label = options.label || '';\n\t\tthis.required = !!options.required;\n\t\tthis.order = options.order === undefined ? 1 : options.order;\n\t\tthis.controlType = options.controlType || '';\n\t\tthis.type = options.type || '';\n\t\tthis.options = options.options || [];\n\t\tthis.validators = options.validators || [];\n\t\tthis.multiple = !!options.multiple;\n\t\tthis.rows = options.rows === undefined ? 1 : options.rows;\n\t\tthis.readonly = !!options.readonly;\n\t\tthis.searchBar = !!options.searchBar;\n\t\tthis.serverUrl = options.serverUrl || '';\n\t\tthis.displayField = options.displayField || '';\n\t\tthis.listFields = options.listFields || [];\n\t\tthis.filterCondition = options.filterCondition || '';\n\t}\n}\n","import { AxiosRequestConfig } from \"axios\";\nconst qs = require(\"qs\");\nexport const API_TIMEOUT = Number(process.env.REACT_APP_API_TIMEOUT) || 10000;\nexport const REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL || \"\";\n\nexport const apiConfig: AxiosRequestConfig = {\n    // withCredentials: true,\n    timeout: API_TIMEOUT,\n    baseURL: REACT_APP_SERVER_URL,\n    headers: {\n        common: {\n            // \"Cache-Control\": \"no-cache, no-store, must-revalidate\",\n            // Pragma: \"no-cache\",\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\"\n        }\n    },\n    paramsSerializer: (params: string) => qs.stringify(params, { indices: false })\n};\n","export class ODateRange{\n    constructor(obj?: any){\n        this.startDate = obj ? obj.startDate : null;\n        this.endDate = obj ? obj.endDate : null;\n    }\n    startDate?: Date;\n    endDate?: Date;\n}"],"sourceRoot":""}